<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lean Deep Tech blog</title>
    <link>https://leandeep.com/</link>
    <description>Recent content on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 14 Jan 2023 07:00:00 +0200</lastBuildDate><atom:link href="https://leandeep.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Retourner un dataframe OHLCV des tickers Binance à partir de CCTX</title>
      <link>https://leandeep.com/retourner-un-dataframe-ohlcv-des-tickers-binance-%C3%A0-partir-de-cctx/</link>
      <pubDate>Sat, 14 Jan 2023 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/retourner-un-dataframe-ohlcv-des-tickers-binance-%C3%A0-partir-de-cctx/</guid>
      <description>Petit tip du jour de minutes. Voici comment convertir les données OHLCV de Binance obtenues grâce à CCTX en dataframe.
import ccxt import calendar from datetime import datetime import pandas as pd import numpy as np from typing import List binance = ccxt.binance() def min_ohlcv(dt: datetime, pair: str, limit: int) -&amp;gt; list: # UTC native object since = calendar.timegm(dt.utctimetuple()) * 1000 ohlcv1 = binance.fetch_ohlcv( symbol=pair, timeframe=&amp;#34;1m&amp;#34;, since=since, limit=limit ) ohlcv2 = binance.</description>
    </item>
    
    <item>
      <title>Terraform REPL</title>
      <link>https://leandeep.com/terraform-repl/</link>
      <pubDate>Mon, 09 Jan 2023 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/terraform-repl/</guid>
      <description>Dans cet article, nous allons voir comment tester son code Terraform façon REPL. L&amp;rsquo;idée c&amp;rsquo;est de pouvoir rapidement dégainer un REPL pour pouvoir tester la bonne syntaxe de son code lorsqu&amp;rsquo;on veut le faire évoluer.
J&amp;rsquo;ai vu qu&amp;rsquo;il y avait des projets non officiel open source sur Github comme celui-ci avec apparemment un vrai REPL mais je n&amp;rsquo;ai pas eu le temps de l&amp;rsquo;analyser et de vérifier qu&amp;rsquo;il n&amp;rsquo;y avait pas de bug et surtout de faille de sécurité.</description>
    </item>
    
    <item>
      <title>Ajouter un prefix sur les noms des fichiers d&#39;un répertoire</title>
      <link>https://leandeep.com/ajouter-un-prefix-sur-les-noms-des-fichiers-dun-r%C3%A9pertoire/</link>
      <pubDate>Sat, 07 Jan 2023 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/ajouter-un-prefix-sur-les-noms-des-fichiers-dun-r%C3%A9pertoire/</guid>
      <description>Petit tip du jour de 5 secondes pour ajouter un prefix devant tous les fichiers d&amp;rsquo;un répertoire:
for f in * ; do mv &amp;#34;$f&amp;#34; Prefix_&amp;#34;$f&amp;#34; ; done </description>
    </item>
    
    <item>
      <title>Enregistrer vos playlists Youtube en mp3 ou mp4</title>
      <link>https://leandeep.com/enregistrer-vos-playlists-youtube-en-mp3-ou-mp4/</link>
      <pubDate>Sat, 07 Jan 2023 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/enregistrer-vos-playlists-youtube-en-mp3-ou-mp4/</guid>
      <description>Petit tip du jour de 25 secondes: pour enregistrer automatiquement via cli vos playlists Youtube en MP3, il vous suffit d&amp;rsquo;utiliser le package Python yt-dlp.
pip install yt-dlp # Enregistrement mp3 yt-dlp -f &amp;#39;ba&amp;#39; -x --audio-format mp3 lien_vers_votre_playlist # Enregistrement mp4 # Best video quality yt-dlp lien_vers_votre_playlist -f &amp;#34;bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best&amp;#34; # Enregistrement mp4 # Worst video quality mais high quality audio yt-dlp lien_vers_votre_playlist -f &amp;#34;worstvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best&amp;#34; </description>
    </item>
    
    <item>
      <title>Afficher les 500 dernières bougies d&#39;une paire crypto de Binance</title>
      <link>https://leandeep.com/afficher-les-500-derni%C3%A8res-bougies-dune-paire-crypto-de-binance/</link>
      <pubDate>Thu, 05 Jan 2023 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/afficher-les-500-derni%C3%A8res-bougies-dune-paire-crypto-de-binance/</guid>
      <description>Petit tip du jour. Voici comment afficher, en moins 2 minutes, l&amp;rsquo;évolution du cours d&amp;rsquo;une paire crypto présente sur Binance.
Installer les packages cctx et plotly puis créer un fichier contenant le code suivant:
import ccxt from datetime import datetime import plotly.graph_objects as go def run(): binance = ccxt.binance() trading_pair = &amp;#34;BTC/USDT&amp;#34; candles = binance.fetch_ohlcv(trading_pair, &amp;#34;1d&amp;#34;) dates = [] open_data = [] high_data = [] low_data = [] close_data = [] for candle in candles: dates.</description>
    </item>
    
    <item>
      <title>Cointégration vs Corrélation en trading</title>
      <link>https://leandeep.com/coint%C3%A9gration-vs-corr%C3%A9lation-en-trading/</link>
      <pubDate>Tue, 03 Jan 2023 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/coint%C3%A9gration-vs-corr%C3%A9lation-en-trading/</guid>
      <description>Introduction Miser sur la corrélation entre différents assets pour faire du pair trading est une mauvaise idée. Il vaut mieux miser sur la cointégration.
Corrélation vs Cointégration La cointégration est une relation statistique entre deux variables qui évoluent de manière similaire à long terme. Cela signifie que si l&amp;rsquo;une des variables change, l&amp;rsquo;autre suivra également cette tendance sur une période de temps prolongée.
La corrélation, en revanche, mesure simplement la relation entre deux variables à un moment donné.</description>
    </item>
    
    <item>
      <title>Data Version Control pour vos projets data ou algo-trading</title>
      <link>https://leandeep.com/data-version-control-pour-vos-projets-data-ou-algo-trading/</link>
      <pubDate>Mon, 02 Jan 2023 12:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/data-version-control-pour-vos-projets-data-ou-algo-trading/</guid>
      <description>Introduction Dans cet article, nous allons voir comment versionner nos datasets et notre code. Les datasets ne seront pas stockés sur git car cet outil n&amp;rsquo;est pas fait pour stocker des fichiers volumineux. Il faut donc stocker les données ailleurs. Ici je vais les stocker sur Google Drive. DVC (Data Version Control) va permettre de versionner les data en créant une référence (un hash) qui sera stocké dans le commit git.</description>
    </item>
    
    <item>
      <title>Et vous quels sont vos projets pour 2023 ?</title>
      <link>https://leandeep.com/et-vous-quels-sont-vos-projets-pour-2023/</link>
      <pubDate>Mon, 02 Jan 2023 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/et-vous-quels-sont-vos-projets-pour-2023/</guid>
      <description>Chaque année, j&amp;rsquo;aime me fixer des objectifs professionnels en plus de mon activité principale. Depuis 3 ans je les publie sur ce blog.
Voici mon programme pour l&amp;rsquo;année 2023:
1. Pérennisation trading bots #TopPrio1
Arbitrage bots Focus DeFi &amp;lt;-&amp;gt; CeFi trades automatiques en Rust Documenter les formules de prices calculations pour les différents DEXes pour point #2 Ajouter une nouvelle brique/feature (en Rust) pour sortir automatiquement les fonds sur cold wallet après trade (cold wallet sécurisé et pas chez moi.</description>
    </item>
    
    <item>
      <title>Piloter une pompe péristaltique avec un esp8266</title>
      <link>https://leandeep.com/piloter-une-pompe-p%C3%A9ristaltique-avec-un-esp8266/</link>
      <pubDate>Mon, 12 Dec 2022 23:10:00 +0000</pubDate>
      
      <guid>https://leandeep.com/piloter-une-pompe-p%C3%A9ristaltique-avec-un-esp8266/</guid>
      <description>Introduction Cet article fait suite à mon article précédent sur l&amp;rsquo;utilisation d&amp;rsquo;une board avec esp8266. Voici ici comment piloter le relai de la même board ESP12F Relay X1 V2.1 en utilisant Blynk. C&amp;rsquo;est plus une prise de notes pour partage et reminder personel pour réutilisation future.
Utilisation de Blynk Créer un compte et &amp;ldquo;skipper&amp;rdquo; tous les quickstart guides et tutorials. Créer un nouveau template. Donnez lui le nom que vous souhaitez.</description>
    </item>
    
    <item>
      <title>Compiler et uploader son code sur une board esp8266</title>
      <link>https://leandeep.com/compiler-et-uploader-son-code-sur-une-board-esp8266/</link>
      <pubDate>Thu, 08 Dec 2022 20:50:00 +0000</pubDate>
      
      <guid>https://leandeep.com/compiler-et-uploader-son-code-sur-une-board-esp8266/</guid>
      <description>Introduction Je suis en train de créer un arrosage automatique pour mes productions de emicro-pousses et régulateur de PH/ EC pour jardin hydroponique connecté. Dans cet article, nous allons voir comment piloter la board ESP12F Relay X1 V2.1 qui embarque un esp8266.
Je cherchais à me mettre à jour sur l&amp;rsquo;IoT et j&amp;rsquo;ai découvert les vidéos des Frères Poulain disponibles sur Youtube. Je les recommande fortement https://www.youtube.com/@lesfrerespoulain .
Après avoir cherché plusieurs heures comment envoyer mon code sur l&amp;rsquo;esp, car bien-sûr il n&amp;rsquo;y avait pas de documentation livré avec mon colis, je me dis que cela pourrait être utile de documenter la procédure.</description>
    </item>
    
  </channel>
</rss>
