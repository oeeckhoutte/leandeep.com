<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lean Deep Tech blog</title>
    <link>https://leandeep.com/</link>
    <description>Recent content on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 24 Mar 2025 22:49:00 +0200</lastBuildDate><atom:link href="https://leandeep.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Run Rust code on ESP32</title>
      <link>https://leandeep.com/run-rust-code-on-esp32/</link>
      <pubDate>Mon, 24 Mar 2025 22:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/run-rust-code-on-esp32/</guid>
      <description>In this brief article, we will explore how to set up the ESP32 development environment to build and run Rust code on the ESP-WROOM-32. This procedure is written to work on Ubuntu 22 with a 64-bit Intel processor. The ESP32 is connected to the PC via USB.
Installation Install Ubuntu packages
sudo apt install -y build-essential libssl-dev pkg-config git sudo apt install -y python3-pip python3-venv Configure USB permissions
sudo usermod -aG dialout $USER sudo usermod -aG tty $USER # Restart the session Install Rust</description>
    </item>
    
    <item>
      <title>Installer quickemu sur Ubuntu 22.04</title>
      <link>https://leandeep.com/installer-quickemu-sur-ubuntu-22.04/</link>
      <pubDate>Fri, 07 Feb 2025 07:32:00 +0200</pubDate>
      
      <guid>https://leandeep.com/installer-quickemu-sur-ubuntu-22.04/</guid>
      <description>Dans cet article, nous allons voir comment installer Quickemu sur Ubuntu 22.04 pour créer des VM sur Ubuntu.
Installation de quickemu
# check if python3 is installed # python3 --version # sudo apt install python3 # si nécessaire sudo apt install qemu bash coreutils ovmf grep jq lsb procps genisoimage usbutils util-linux sed spice-client-gtk swtpm wget xdg-user-dirs zsync unzip sudo apt-add-repository ppa:flexiondotorg/quickemu sudo apt update sudo apt install quickemu Installation du GUI</description>
    </item>
    
    <item>
      <title>Installer Hashcat sur Ubuntu 22.04</title>
      <link>https://leandeep.com/installer-hashcat-sur-ubuntu-22.04/</link>
      <pubDate>Thu, 06 Feb 2025 23:32:00 +0200</pubDate>
      
      <guid>https://leandeep.com/installer-hashcat-sur-ubuntu-22.04/</guid>
      <description>Dans cet article, nous allons voir comment installer Hashcat v6.2.5 sur Ubuntu 22 (PopOS).
Pré-requis
nvidia-smi déjà installé.
Installation de hashcat
sudo apt update sudo apt upgrade apt install hashcat Installation de Cuda Toolkit 11.7
wget https://developer.download.nvidia.com/compute/cuda/11.7.0/local_installers/cuda_11.7.0_515.43.04_linux.run sudo sh cuda_11.7.0_515.43.04_linux.run # Installer Cuda et refuser l&amp;#39;installation du Driver Nvidia # Une fois l&amp;#39;installation terminée, ajouter cuda au bashrc echo &amp;#34;export PATH=/usr/local/cuda-11.7/bin:$PATH&amp;#34; &amp;gt;&amp;gt; ~/.bashrc echo &amp;#34;export LD_LIBRARY_PATH=/usr/local/cuda-11.7/lib64:$LD_LIBRARY_PATH&amp;#34; &amp;gt;&amp;gt; ~/.bashrc Vérification
nvcc --version hashcat -I Test de crack du MD5 suivant: 82a4b202be22fbbcd236d2f65988acde pour vérifier que les GPUs sont ok.</description>
    </item>
    
    <item>
      <title>Installer Hashcat sur Fedora 41</title>
      <link>https://leandeep.com/installer-hashcat-sur-fedora-41/</link>
      <pubDate>Sat, 25 Jan 2025 22:32:00 +0200</pubDate>
      
      <guid>https://leandeep.com/installer-hashcat-sur-fedora-41/</guid>
      <description>Installation
sudo dnf install hashcat hashcat-devel hashcat-doc Vérifier si votre GPU est détecté
hashcat -I Réaliser un benchmark
hashcat -b Faire un test avec un hash MD5
wget -c https://github.com/danielmiessler/SecLists/archive/master.zip -O SecList.zip \ &amp;amp;&amp;amp; unzip SecList.zip \ &amp;amp;&amp;amp; rm -f SecList.zip echo &amp;#34;5d41402abc4b2a76b9719d911017c592&amp;#34; &amp;gt; test.hash hashcat -m 0 -a 0 test.hash ~/Dev/SecLists-master/Passwords/xato-net-10-million-passwords-1000000.txt </description>
    </item>
    
    <item>
      <title>Installer un eGPU Razer Core X sur Fedora 41 et faire tourner Pytorch</title>
      <link>https://leandeep.com/installer-un-egpu-razer-core-x-sur-fedora-41-et-faire-tourner-pytorch/</link>
      <pubDate>Thu, 23 Jan 2025 23:32:00 +0200</pubDate>
      
      <guid>https://leandeep.com/installer-un-egpu-razer-core-x-sur-fedora-41-et-faire-tourner-pytorch/</guid>
      <description>Dans cet article écrit très rapidement, nous allons voir comment installer un GPU dans un boitier eGPU Razer Core X. L&amp;rsquo;ajout de cet eGPU permet d&amp;rsquo;avoir plus de puissance de calcul comparé au CPU pour l&amp;rsquo;inférence de modèles avec Pytorch.
Activez le dépôt RPM Fusion
Le dépôt RPM Fusion fournit les pilotes NVIDIA officiels pour Fedora.
sudo dnf install \ https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm \ https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm sudo dnf upgrade --refresh Installez les pilotes NVIDIA</description>
    </item>
    
    <item>
      <title>Surveiller et redémarrer un script Python dès qu&#39;un fichier est modifié</title>
      <link>https://leandeep.com/surveiller-et-red%C3%A9marrer-un-script-python-d%C3%A8s-quun-fichier-est-modifi%C3%A9/</link>
      <pubDate>Sat, 11 Jan 2025 23:32:00 +0200</pubDate>
      
      <guid>https://leandeep.com/surveiller-et-red%C3%A9marrer-un-script-python-d%C3%A8s-quun-fichier-est-modifi%C3%A9/</guid>
      <description>On peut utiliser watchdog pour surveiller les modifications des fichiers et relancer automatiquement un module/script lorsque des modifications sont détectées. Voici un exemple complet:
Pré-requis
pip install watchdog
Créer un script de surveillance
Créer par exemple un fichier appelé run_and_reload.py
import os import subprocess import sys from watchdog.observers import Observer from watchdog.events import FileSystemEventHandler class RestartOnChangeHandler(FileSystemEventHandler): def __init__(self, run_command): super().__init__() self.run_command = run_command self.process = None self.start_process() def start_process(self): if self.</description>
    </item>
    
    <item>
      <title>Et vous quels sont vos projets pour 2025 ?</title>
      <link>https://leandeep.com/et-vous-quels-sont-vos-projets-pour-2025/</link>
      <pubDate>Sun, 05 Jan 2025 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/et-vous-quels-sont-vos-projets-pour-2025/</guid>
      <description>Tous les ans je me fixe des objectifs professionnels que je partage sur ce blog. Cela me permet de me focaliser durant l&amp;rsquo;année et surtout de me challenger chaque année. Cette année, je me suis fixé un énorme challenge personnel du coup je vais lever le pied sur les challenges pro.
Voici donc mon programme pour cette année 2025:
1. Investissements en immobilier
2. Créer mon propre Arduino avec un PCB maison #learn</description>
    </item>
    
    <item>
      <title>Installer Tailscale sur Fedora</title>
      <link>https://leandeep.com/installer-tailscale-sur-fedora/</link>
      <pubDate>Wed, 11 Dec 2024 23:32:00 +0200</pubDate>
      
      <guid>https://leandeep.com/installer-tailscale-sur-fedora/</guid>
      <description>Pour installer Tailscale sur Fedora Desktop, suivez les étapes ci-dessous. Tailscale permet de configurer un réseau privé virtuel (VPN) de manière simple, en s&amp;rsquo;appuyant sur WireGuard.
Installer Tailscale
sudo dnf install tailscale Démarrer et activer Tailscale
sudo systemctl start tailscaled sudo systemctl enable tailscaled Connecter votre desktop à Tailscale
Editer le fichier sudo vim /etc/sysctl.conf:
net.ipv4.ip_forward = 1 net.ipv6.conf.all.forwarding = 1 Et appliquer les changements:
sudo sysctl -p Lancer l&amp;rsquo;authentification</description>
    </item>
    
    <item>
      <title>RDP sécurisé avec SSH sur Fedora</title>
      <link>https://leandeep.com/rdp-s%C3%A9curis%C3%A9-avec-ssh-sur-fedora/</link>
      <pubDate>Wed, 11 Dec 2024 23:32:00 +0200</pubDate>
      
      <guid>https://leandeep.com/rdp-s%C3%A9curis%C3%A9-avec-ssh-sur-fedora/</guid>
      <description>Dans cet article, nous allons voir comment mettre en place un Remote Desktop Protocol (RDP) avec du SSH sur une distribution Fedora.
Installation
sudo dnf install -y xrdp sudo systemctl enable xrdp --now Configuration
sudo firewall-cmd --add-port=3389/tcp --permanent sudo firewall-cmd --reload Connexion
On finalise la configuration. On désactive Wayland:
Wayland est un protocole et une architecture de serveur d&amp;rsquo;affichage pour les systèmes d&amp;rsquo;exploitation basés sur Linux. Il remplace ou complète le serveur d&amp;rsquo;affichage X11 (ou X Window System) utilisé traditionnellement sur Linux depuis des décennies.</description>
    </item>
    
    <item>
      <title>Simuler un mode offline pour certains tests Pytest</title>
      <link>https://leandeep.com/simuler-un-mode-offline-pour-certains-tests-pytest/</link>
      <pubDate>Tue, 10 Dec 2024 23:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/simuler-un-mode-offline-pour-certains-tests-pytest/</guid>
      <description>Pour certains, cet article peut sembler inutile car ils vous diront qu&amp;rsquo;il suffit de couper le wifi sur son laptop pour ne plus avoir internet. Ce n&amp;rsquo;est pas faux, mais parfois et sans rentrer dans le détail, il n&amp;rsquo;est pas toujours possible de travailler offline pendant des heures.
Voici donc un tip pour simuler dans des tests unitaires la déconnexion d&amp;rsquo;internet. Il suffit de créer la fixture pytest suivante et de l&amp;rsquo;appeler dans vos tests.</description>
    </item>
    
  </channel>
</rss>
