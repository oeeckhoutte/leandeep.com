<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lean Deep Tech blog</title>
    <link>https://leandeep.com/</link>
    <description>Recent content on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 01 Aug 2022 20:59:00 +0000</lastBuildDate><atom:link href="https://leandeep.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Installer Docker et mitmproxy sur Ubuntu 22.04</title>
      <link>https://leandeep.com/installer-docker-et-mitmproxy-sur-ubuntu-22.04/</link>
      <pubDate>Mon, 01 Aug 2022 20:59:00 +0000</pubDate>
      
      <guid>https://leandeep.com/installer-docker-et-mitmproxy-sur-ubuntu-22.04/</guid>
      <description>Tips très très rapide montrant comment installer Docker et Mitmproxy sur Ubuntu 22.04.
 Installation de Docker sur Ubuntu 22.04 sudo apt update sudo apt install -y ca-certificates curl gnupg lsb-release curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo &amp;#34;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&amp;#34; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null sudo apt-get update sudo apt install docker-ce docker-ce-cli containerd.io -y sudo usermod -aG docker $USER newgrp docker  Vérification de l&amp;rsquo;installation de Docker docker version  Démarrage du proxy mitm sur VM distante tmux docker run --rm -it -v ~/.</description>
    </item>
    
    <item>
      <title>Blog headless avec édition de contenu sur Ghost app</title>
      <link>https://leandeep.com/blog-headless-avec-%C3%A9dition-de-contenu-sur-ghost-app/</link>
      <pubDate>Sun, 31 Jul 2022 21:13:00 +0000</pubDate>
      
      <guid>https://leandeep.com/blog-headless-avec-%C3%A9dition-de-contenu-sur-ghost-app/</guid>
      <description>Introduction Dans cet article, nous allons voir comment créer un blog headless à partir de Ghost en moins de 5 minutes. Des bonnes performances (pas de rendering nécessaire), pas besoin de serveur payant (juste un hosting de static content) et on garde la simplicité d&amp;rsquo;édition (authoring) via Ghost.
 Installer Ghost npm install ghost-cli@latest -g  Démarrer/créer un blog ghost ghost install local  Nouveau thème Télécharger le fichier zip contenant un thème custom: https://github.</description>
    </item>
    
    <item>
      <title>Installer Argo workflow sur OSX</title>
      <link>https://leandeep.com/installer-argo-workflow-sur-osx/</link>
      <pubDate>Tue, 26 Jul 2022 22:13:00 +0000</pubDate>
      
      <guid>https://leandeep.com/installer-argo-workflow-sur-osx/</guid>
      <description>Introduction Dans cet article, nous allons voir comment installer Argo workflow localement sur OSX. Il s&amp;rsquo;agit d&amp;rsquo;une installation très simple utilisant Docker-desktop et Kubernetes. Cette installation n&amp;rsquo;est pas recommandée pour de la production. Elle permet de tester et d&amp;rsquo;évaluer l&amp;rsquo;outil ou de simplement créer/développer des workflows depuis votre poste local.
 Installer Argo Cli curl -sLO https://github.com/argoproj/argo-workflows/releases/download/v3.2.6/argo-darwin-amd64.gz gunzip argo-darwin-amd64.gz chmod +x argo-darwin-amd64 mv ./argo-darwin-amd64 /usr/local/bin/argo argo version  Déploiement d&amp;rsquo;Argo sur k8s kubectl create ns argo kubectl apply -n argo -f https://raw.</description>
    </item>
    
    <item>
      <title>Autres Blockchains et RPC nodes</title>
      <link>https://leandeep.com/autres-blockchains-et-rpc-nodes/</link>
      <pubDate>Fri, 15 Jul 2022 09:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/autres-blockchains-et-rpc-nodes/</guid>
      <description>Algorand Aurora Cronos KuCoin Near IoTeX Tezos Theta (soon) TomoChain   Algorand Providers
 Pocket Network - https://mainnet.portal.pokt.network Quicknode - https://www.quicknode.com/   Own node
 https://developer.algorand.org/docs/run-a-node/setup/install/   Aurora Providers
 Infura - https://infura.io   Public Endpoints
 https://mainnet.aurora.dev   Own node
 https://doc.aurora.dev/#running-your-own-aurora-node   Cronos Public Endpoints
 https://rpc.artemisone.org/cronos https://evm.cronos.org/ https://rpc.vvs.finance/ https://rpc.crodex.app/ https://mmf-rpc.xstaking.sg https://gateway.nebkas.ro/   Chain Id 25
 Currency CRO
 Explorer</description>
    </item>
    
    <item>
      <title>Utiliser Erigon pour ses Nodes sur Ubuntu 20.04</title>
      <link>https://leandeep.com/utiliser-erigon-pour-ses-nodes-sur-ubuntu-20.04/</link>
      <pubDate>Tue, 12 Jul 2022 21:03:00 +0000</pubDate>
      
      <guid>https://leandeep.com/utiliser-erigon-pour-ses-nodes-sur-ubuntu-20.04/</guid>
      <description>Installation Go wget https://dl.google.com/go/go1.18.linux-amd64.tar.gz sudo tar -C /usr/local -xzf go1.18.linux-amd64.tar.gz Editer ~/.profile et ajouter les commandes suivantes
export PATH=$PATH:/usr/local/go/bin export GOPATH=&amp;#34;${HOME}/.go/bin&amp;#34; export PATH=$GOPATH:$PATH source ~/.profile go version  Installation Erigon cd /data/ git clone git clone --recurse-submodules -j8 https://github.com/ledgerwatch/erigon.git cd erigon make erigon  Run Polygon
mkdir /data/bor-mainnet ./build/bin/erigon --datadir=&amp;#34;/data/bor-mainnet&amp;#34; --chain=bor-mainnet --port=30303 --http.port=8545 --torrent.port=42069 --private.api.addr=127.0.0.1:9090 --http --ws --http.api=eth,debug,net,trace,web3,erigon  BSC
Archive Node:
mkdir /data/bsc ./build/bin/erigon --datadir=&amp;#34;/data/bsc&amp;#34; --chain=bsc --port=30303 --http.port=8545 --torrent.port=42069 --private.</description>
    </item>
    
    <item>
      <title>Installer ZeroTier sur Ubuntu 20.04</title>
      <link>https://leandeep.com/installer-zerotier-sur-ubuntu-20.04/</link>
      <pubDate>Tue, 12 Jul 2022 20:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/installer-zerotier-sur-ubuntu-20.04/</guid>
      <description>Installation curl -s https://install.zerotier.com | sudo bash curl -s &amp;#39;https://raw.githubusercontent.com/zerotier/ZeroTierOne/master/doc/contact%40zerotier.com.gpg&amp;#39; | gpg --import &amp;amp;&amp;amp; \ if z=$(curl -s &amp;#39;https://install.zerotier.com/&amp;#39; | gpg); then echo &amp;#34;$z&amp;#34; | sudo bash; fi sudo apt update sudo apt install -y zerotier-one  Configuration Récupérer votre network_id sur https://my.zerotier.com/ puis connecter votre serveur à votre réseau.
sudo zerotier-cli join &amp;lt;network_id&amp;gt; Retourner sur https://my.zerotier.com/ pour autoriser le nouveau noeud ajouté à accéder à votre réseau.
 Editer /etc/ssh/sshd_config et remplacer ListenAddress 0.</description>
    </item>
    
    <item>
      <title>Blockchains et RPC nodes pour mes robots de trading</title>
      <link>https://leandeep.com/blockchains-et-rpc-nodes-pour-mes-robots-de-trading/</link>
      <pubDate>Sun, 03 Jul 2022 21:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/blockchains-et-rpc-nodes-pour-mes-robots-de-trading/</guid>
      <description>Voici des informations de base sur les blockchains sur lesquels sont connectés mes robots de trading.
 Arbitrum Avalanche BNB Smart Chain (BSC) Celo Ethereum Fantom Fuse Gnosis (xDAI) Harmony (Mainnet Shard 0) Moonriver Optimism Polygon Solana   Arbitrum Providers
 Alchemy - https://www.alchemy.com ANKR - https://ankr.com Moralis - https://moralis.io QuickNode - https://www.quicknode.com/ Infura - https://infura.io   Public Endpoints
 https://arb1.arbitrum.io/rpc https://arbitrum.public-rpc.com https://rpc.ankr.com/arbitrum   Chain Id 42161</description>
    </item>
    
    <item>
      <title>Exemples de DEX que j&#39;utilise dans mes robots de trading</title>
      <link>https://leandeep.com/exemples-de-dex-que-jutilise-dans-mes-robots-de-trading/</link>
      <pubDate>Sun, 03 Jul 2022 21:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/exemples-de-dex-que-jutilise-dans-mes-robots-de-trading/</guid>
      <description>Voici quelques exemples de DEXes sur lesquels mes robots de trading sont connectés ainsi que quelques informations de base les concernants. J&amp;rsquo;ai pris l&amp;rsquo;exemple des 2 Blockchains les plus utilisées après Ethereum à savoir BNB Smart Chain (BSC) et Polygon.
Pour le moment, et jusqu&amp;rsquo;à ce qu&amp;rsquo;on passe en version 2, je n&amp;rsquo;utilise plus Ethereum à cause de gas fees qui rendent les trades moins intéressants.
Bien sûr il y en a plein d&amp;rsquo;autres et sur des tas de blockchains différentes.</description>
    </item>
    
    <item>
      <title>Télécharger les ABIs des smart contracts vérifiés sur bscscan</title>
      <link>https://leandeep.com/t%C3%A9l%C3%A9charger-les-abis-des-smart-contracts-v%C3%A9rifi%C3%A9s-sur-bscscan/</link>
      <pubDate>Sun, 03 Jul 2022 21:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/t%C3%A9l%C3%A9charger-les-abis-des-smart-contracts-v%C3%A9rifi%C3%A9s-sur-bscscan/</guid>
      <description>Tout est dans le titre. Voici un script très simple permettant de télécharger les ABIs disponibles sur BSC Scan.
Créer un fichier get_abi.py et coller le contenu suivant:
 #!/usr/bin/python import argparse import requests import json ABI_ENDPOINT = &amp;#34;https://api.etherscan.io/api?module=contract&amp;amp;action=getabi&amp;amp;address=&amp;#34; parser = argparse.ArgumentParser() parser.add_argument(&amp;#34;-a&amp;#34;, &amp;#34;--address&amp;#34;, type=str, help=&amp;#34;Smart contract address&amp;#34;) parser.add_argument(&amp;#34;-o&amp;#34;, &amp;#34;--output&amp;#34;, type=str, help=&amp;#34;Path to store the output ABI JSON file&amp;#34;, required=True) def __main__() -&amp;gt; None: &amp;#34;&amp;#34;&amp;#34;Exports contract ABI in JSON&amp;#34;&amp;#34;&amp;#34; args = parser.</description>
    </item>
    
    <item>
      <title>Commandes de synchronisation/dev Geth</title>
      <link>https://leandeep.com/commandes-de-synchronisation/dev-geth/</link>
      <pubDate>Thu, 30 Jun 2022 09:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/commandes-de-synchronisation/dev-geth/</guid>
      <description>Dans cet article très court, vous trouverez des commandes utiles pour vérifier si votre noeud BSC (Geth) est synchronisé ou non, ainsi que d&amp;rsquo;autres commandes utiles pour développer sur cette Blockchain.
 Synchronisation Si vous n&amp;rsquo;avez pas accès la machine, vous pouvez utiliser curl:
curl -H &amp;#34;Content-Type: application/json&amp;#34; -X POST --data &amp;#39;{&amp;#34;jsonrpc&amp;#34;:&amp;#34;2.0&amp;#34;,&amp;#34;method&amp;#34;:&amp;#34;eth_syncing&amp;#34;,&amp;#34;params&amp;#34;:[],&amp;#34;id&amp;#34;:1}&amp;#39; http://127.0.0.1:8545  Par contre, si vous avez accès à geth sur le serveur faisant tourner la blockchain vous pouvez utiliser une de ces deux commandes:</description>
    </item>
    
  </channel>
</rss>
