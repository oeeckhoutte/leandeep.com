<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lean Deep Tech blog</title>
    <link>https://leandeep.com/</link>
    <description>Recent content on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 12 Jul 2022 21:03:00 +0000</lastBuildDate><atom:link href="https://leandeep.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Utiliser Erigon pour ses Nodes sur Ubuntu 20.04</title>
      <link>https://leandeep.com/utiliser-erigon-pour-ses-nodes-sur-ubuntu-20.04/</link>
      <pubDate>Tue, 12 Jul 2022 21:03:00 +0000</pubDate>
      
      <guid>https://leandeep.com/utiliser-erigon-pour-ses-nodes-sur-ubuntu-20.04/</guid>
      <description>Installation Go wget https://dl.google.com/go/go1.18.linux-amd64.tar.gz sudo tar -C /usr/local -xzf go1.18.linux-amd64.tar.gz Editer ~/.profile et ajouter les commandes suivantes
export PATH=$PATH:/usr/local/go/bin export GOPATH=&amp;#34;${HOME}/.go/bin&amp;#34; export PATH=$GOPATH:$PATH source ~/.profile go version  Installation Erigon cd /data/ git clone git clone --recurse-submodules -j8 https://github.com/ledgerwatch/erigon.git cd erigon make erigon  Run Polygon
mkdir /data/bor-mainnet ./build/bin/erigon --datadir=&amp;#34;/data/bor-mainnet&amp;#34; --chain=bor-mainnet --port=30303 --http.port=8545 --torrent.port=42069 --private.api.addr=127.0.0.1:9090 --http --ws --http.api=eth,debug,net,trace,web3,erigon  bsc
mkdir /data/bsc ./build/bin/erigon --datadir=&amp;#34;/data/bsc&amp;#34; --chain=bsc --port=30303 --http.port=8545 --torrent.port=42069 --private.api.addr=127.0.0.1:9090 --http --ws --http.</description>
    </item>
    
    <item>
      <title>Installer ZeroTier sur Ubuntu 20.04</title>
      <link>https://leandeep.com/installer-zerotier-sur-ubuntu-20.04/</link>
      <pubDate>Tue, 12 Jul 2022 20:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/installer-zerotier-sur-ubuntu-20.04/</guid>
      <description>Installation curl -s https://install.zerotier.com | sudo bash curl -s &amp;#39;https://raw.githubusercontent.com/zerotier/ZeroTierOne/master/doc/contact%40zerotier.com.gpg&amp;#39; | gpg --import &amp;amp;&amp;amp; \ if z=$(curl -s &amp;#39;https://install.zerotier.com/&amp;#39; | gpg); then echo &amp;#34;$z&amp;#34; | sudo bash; fi sudo apt update sudo apt install -y zerotier-one  Configuration Récupérer votre network_id sur https://my.zerotier.com/ puis connecter votre serveur à votre réseau.
sudo zerotier-cli join &amp;lt;network_id&amp;gt; Retourner sur https://my.zerotier.com/ pour autoriser le nouveau noeud ajouté à accéder à votre réseau.
 Editer /etc/ssh/sshd_config et remplacer ListenAddress 0.</description>
    </item>
    
    <item>
      <title>Blockchains et RPC nodes pour mes robots de trading</title>
      <link>https://leandeep.com/blockchains-et-rpc-nodes-pour-mes-robots-de-trading/</link>
      <pubDate>Sun, 03 Jul 2022 21:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/blockchains-et-rpc-nodes-pour-mes-robots-de-trading/</guid>
      <description>Voici des informations de base sur les blockchains sur lesquels sont connectés mes robots de trading.
 Arbitrum Avalanche BNB Smart Chain (BSC) Celo Ethereum Fantom Fuse Gnosis (xDAI) Harmony (Mainnet Shard 0) Moonriver Optimism Polygon Solana   Arbitrum Providers
 Alchemy - https://www.alchemy.com ANKR - https://ankr.com Moralis - https://moralis.io QuickNode - https://www.quicknode.com/ Infura - https://infura.io   Public Endpoints
 https://arb1.arbitrum.io/rpc https://arbitrum.public-rpc.com https://rpc.ankr.com/arbitrum   Chain Id 42161</description>
    </item>
    
    <item>
      <title>Télécharger les ABIs des smart contracts vérifiés sur bscscan</title>
      <link>https://leandeep.com/t%C3%A9l%C3%A9charger-les-abis-des-smart-contracts-v%C3%A9rifi%C3%A9s-sur-bscscan/</link>
      <pubDate>Sun, 03 Jul 2022 21:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/t%C3%A9l%C3%A9charger-les-abis-des-smart-contracts-v%C3%A9rifi%C3%A9s-sur-bscscan/</guid>
      <description>Tout est dans le titre. Voici un script très simple permettant de télécharger les ABIs disponibles sur BSC Scan.
Créer un fichier get_abi.py et coller le contenu suivant:
 #!/usr/bin/python import argparse import requests import json ABI_ENDPOINT = &amp;#34;https://api.etherscan.io/api?module=contract&amp;amp;action=getabi&amp;amp;address=&amp;#34; parser = argparse.ArgumentParser() parser.add_argument(&amp;#34;-a&amp;#34;, &amp;#34;--address&amp;#34;, type=str, help=&amp;#34;Smart contract address&amp;#34;) parser.add_argument(&amp;#34;-o&amp;#34;, &amp;#34;--output&amp;#34;, type=str, help=&amp;#34;Path to store the output ABI JSON file&amp;#34;, required=True) def __main__() -&amp;gt; None: &amp;#34;&amp;#34;&amp;#34;Exports contract ABI in JSON&amp;#34;&amp;#34;&amp;#34; args = parser.</description>
    </item>
    
    <item>
      <title>Commandes de synchronisation/dev Geth</title>
      <link>https://leandeep.com/commandes-de-synchronisation/dev-geth/</link>
      <pubDate>Thu, 30 Jun 2022 09:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/commandes-de-synchronisation/dev-geth/</guid>
      <description>Dans cet article très court, vous trouverez des commandes utiles pour vérifier si votre noeud BSC (Geth) est synchronisé ou non, ainsi que d&amp;rsquo;autres commandes utiles pour développer sur cette Blockchain.
 Synchronisation Si vous n&amp;rsquo;avez pas accès la machine, vous pouvez utiliser curl:
curl -H &amp;#34;Content-Type: application/json&amp;#34; -X POST --data &amp;#39;{&amp;#34;jsonrpc&amp;#34;:&amp;#34;2.0&amp;#34;,&amp;#34;method&amp;#34;:&amp;#34;eth_syncing&amp;#34;,&amp;#34;params&amp;#34;:[],&amp;#34;id&amp;#34;:1}&amp;#39; http://127.0.0.1:8545  Par contre, si vous avez accès à geth sur le serveur faisant tourner la blockchain vous pouvez utiliser une de ces deux commandes:</description>
    </item>
    
    <item>
      <title>Installer Neo4j 4.1 sur Ubuntu 20.04</title>
      <link>https://leandeep.com/installer-neo4j-4.1-sur-ubuntu-20.04/</link>
      <pubDate>Mon, 30 May 2022 00:46:43 +0000</pubDate>
      
      <guid>https://leandeep.com/installer-neo4j-4.1-sur-ubuntu-20.04/</guid>
      <description>Voici la procédure à suivre pour installer Neo4j 4.1 sur Ubuntu 20.04.
 Truster le repo Neo4j
curl -fsSL https://debian.neo4j.com/neotechnology.gpg.key |sudo gpg --dearmor -o /usr/share/keyrings/neo4j.gpg  Ajouter le repo Neo4j dans la liste des packages APT
echo &amp;#34;deb [signed-by=/usr/share/keyrings/neo4j.gpg] https://debian.neo4j.com stable 4.1&amp;#34; | sudo tee -a /etc/apt/sources.list.d/neo4j.list  Prendre en compte la nouvelle source
sudo apt update  Installer le package
sudo apt install neo4j  Enable le service
sudo systemctl enable neo4j.</description>
    </item>
    
    <item>
      <title>Protéger votre site internet/ web app du scraping</title>
      <link>https://leandeep.com/prot%C3%A9ger-votre-site-internet/-web-app-du-scraping/</link>
      <pubDate>Sat, 28 May 2022 09:45:00 +0000</pubDate>
      
      <guid>https://leandeep.com/prot%C3%A9ger-votre-site-internet/-web-app-du-scraping/</guid>
      <description>Si vous avez besoin de protéger vos précieuses données, sécuriser votre API ne suffit pas. Il faut aussi protéger votre front du scraping sans quoi un hacker peut récupérer toutes vos données. Pour un hacker, c&amp;rsquo;est un peu plus long qu&amp;rsquo;attaquer une API mais pour une personne expérimentée, cela peut aller très vite. Dans cet article succinct, nous allons voir brièvement des techniques utilisées pour scraper des données. Il est important de les connaître pour mieux protéger son site internet.</description>
    </item>
    
    <item>
      <title>Lister les nouveaux Exit Nodes sur Tor</title>
      <link>https://leandeep.com/lister-les-nouveaux-exit-nodes-sur-tor/</link>
      <pubDate>Fri, 27 May 2022 13:50:00 +0000</pubDate>
      
      <guid>https://leandeep.com/lister-les-nouveaux-exit-nodes-sur-tor/</guid>
      <description>Si comme moi vous vous demandez à quelle fréquence des Exit Nodes sont ajoutés ou retirés du réseau Tor, alors vous aurez la réponse en exécutant le script suivant. Parfois prendre 5 minutes à écrire un script peut nous donner les réponses aux questions dont Google n&amp;rsquo;a pas la réponse.
  Python 3+ pip install requests   import requests from datetime import datetime from time import sleep TOR_PROXIES_URI = &amp;#34;https://check.</description>
    </item>
    
    <item>
      <title>Lister les desktop environments installés sur Ubuntu</title>
      <link>https://leandeep.com/lister-les-desktop-environments-install%C3%A9s-sur-ubuntu/</link>
      <pubDate>Thu, 26 May 2022 21:35:00 +0000</pubDate>
      
      <guid>https://leandeep.com/lister-les-desktop-environments-install%C3%A9s-sur-ubuntu/</guid>
      <description>Second tiny tip du jour. Voici comment lister tous les desktop environments installés sur Ubuntu.
ls -l /usr/share/xsessions/ Output:
-rw-r--r-- 1 root root 155 janv. 9 2021 cinnamon.desktop -rw-r--r-- 1 root root 268 janv. 9 2021 cinnamon2d.desktop -rw-r--r-- 1 root root 8192 mars 23 2020 mate.desktop -rw-r--r-- 1 root root 303 mars 26 2020 ubuntu.desktop </description>
    </item>
    
    <item>
      <title>Convertir un fichier pipfile.lock en requirements.txt</title>
      <link>https://leandeep.com/convertir-un-fichier-pipfile.lock-en-requirements.txt/</link>
      <pubDate>Thu, 26 May 2022 21:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/convertir-un-fichier-pipfile.lock-en-requirements.txt/</guid>
      <description>Petit tip du jour pour convertir un fichier Pipfile en requirements.txt
En pré-requis, il faut avoir jq
 brew install jq
 Ensuite, il suffit d&amp;rsquo;exécuter la commande suivante:
jq -r &amp;#39;.default | to_entries[] | .key + .value.version&amp;#39; \ Pipfile.lock &amp;gt; requirements.txt </description>
    </item>
    
  </channel>
</rss>
