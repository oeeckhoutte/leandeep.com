<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bienvenue sur le site de Lean Deep</title>
    <link>https://leandeep.com/</link>
    <description>Recent content on Bienvenue sur le site de Lean Deep</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 23 Feb 2021 21:01:00 +0000</lastBuildDate><atom:link href="https://leandeep.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mocker un datetime .now() dans un test unitaire Python</title>
      <link>https://leandeep.com/mocker-un-datetime-.now-dans-un-test-unitaire-python/</link>
      <pubDate>Tue, 23 Feb 2021 21:01:00 +0000</pubDate>
      
      <guid>https://leandeep.com/mocker-un-datetime-.now-dans-un-test-unitaire-python/</guid>
      <description>La fonction datetime.now() peut parfois &amp;ldquo;poser problème&amp;rdquo; dans les tests unitaires. En effet, lorsqu&amp;rsquo;on veut comparer le résultat d&amp;rsquo;une fonction comportant une date (now) à un objet pré-défini expected, cela peut poser problème&amp;hellip;
 Si on essaye de patcher la fonction today() ou now() comme ceci
@mock.patch(&#39;datetime.date.today&#39;) def test(): datetime.date.today.return_value = date(2010, 1, 1) print datetime.date.today() cela ne fonctionnera pas car les types built-in sont immutables.
On aura alors une erreur du genre: TypeError: can&#39;t set attributes of built-in/extension type &#39;datetime.</description>
    </item>
    
    <item>
      <title>Régler son imprimante 3D Creality cr10s pro</title>
      <link>https://leandeep.com/r%C3%A9gler-son-imprimante-3d-creality-cr10s-pro/</link>
      <pubDate>Sat, 02 Jan 2021 21:51:00 +0000</pubDate>
      
      <guid>https://leandeep.com/r%C3%A9gler-son-imprimante-3d-creality-cr10s-pro/</guid>
      <description>Réglage de l&amp;rsquo;axe X
Pour le réglage de l&amp;rsquo;axe X, il faut utiliser la cale de 10cm fournie, la caler bien droite sous la courroie, et régler l&amp;rsquo;axe en faisant tourner la vis sans fin à l&amp;rsquo;arrière. (Tenez l&amp;rsquo;autre vis sans fin pour ne pas qu&amp;rsquo;elle tourne en même temps)
 Réglage de l&amp;rsquo;axe Z
Visser toutes les vis du plateau à fond sans forcer et desserrer de 1 tour.</description>
    </item>
    
    <item>
      <title>Faire tourner un noeud Ethereum</title>
      <link>https://leandeep.com/faire-tourner-un-noeud-ethereum/</link>
      <pubDate>Wed, 16 Dec 2020 21:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/faire-tourner-un-noeud-ethereum/</guid>
      <description>Ce court article décrit comment faire tourner un noeud Ethereum sur n&amp;rsquo;importe quel OS.
 Noeud sur Rinkeby docker pull ethereum/client-go:latest mkdir ~/.geth-rinkeby docker run --name eth -p 8546:8546 -v ~/.geth-rinkeby:/geth -it \ ethereum/client-go --rinkeby --ws --ipcdisable \ --wsaddr 0.0.0.0 --wsorigins=&amp;quot;*&amp;quot; --datadir /geth Pour détacher le running container, sans le stopper, vous pouvez utiliser les commandes suivantes: Ctrl + P, Ctrl + Q
 Si le container est stoppé, vous pouvez le relancer avec la commande suivante: docker start -i eth</description>
    </item>
    
    <item>
      <title>Fonctions avec plusieurs types en Python 3.10</title>
      <link>https://leandeep.com/fonctions-avec-plusieurs-types-en-python-3.10/</link>
      <pubDate>Tue, 08 Dec 2020 21:01:00 +0000</pubDate>
      
      <guid>https://leandeep.com/fonctions-avec-plusieurs-types-en-python-3.10/</guid>
      <description>Python 3.10, sorti officiellement le 04 octobre 2021, permet d&amp;rsquo;écrire de manière plus lisible les différentes types que peuvent prendre les arguments et données retournées par les fonctions.
 Example pour une fonction qui prend un argument de type int ou str et qui retourne un objet de type int ou str:
def ma_fonction(argument: int | str) -&amp;gt; int | str: pass On utilise le caractère: |.
 Avant, de Python 3.</description>
    </item>
    
    <item>
      <title>Calculs dans un réseau de neurones</title>
      <link>https://leandeep.com/calculs-dans-un-r%C3%A9seau-de-neurones/</link>
      <pubDate>Wed, 02 Dec 2020 23:52:00 +0000</pubDate>
      
      <guid>https://leandeep.com/calculs-dans-un-r%C3%A9seau-de-neurones/</guid>
      <description>Voici les 5 concepts de base d&amp;rsquo;un réseau de neurones.
Finalement un réseau de neurones n&amp;rsquo;est qu&amp;rsquo;une combinaison linéaire de fonctions non-linéaires.
Les calculs sont finalement très simples.</description>
    </item>
    
    <item>
      <title>Et vous quels sont vos projets pour 2021 ?</title>
      <link>https://leandeep.com/et-vous-quels-sont-vos-projets-pour-2021/</link>
      <pubDate>Tue, 01 Dec 2020 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/et-vous-quels-sont-vos-projets-pour-2021/</guid>
      <description>Chaque année, j&amp;rsquo;aime me fixer des objectifs professionnels en supplément de mon activité principale. Ne pas mettre tous mes oeufs dans le même panier et surtout apprendre de nouvelles choses m&amp;rsquo;anime totalement. C&amp;rsquo;est d&amp;rsquo;ailleurs ce que j&amp;rsquo;aime dans mon métier, la nouveauté. Je me fixe ce genre d&amp;rsquo;objectifs depuis quelques années déjà, mais c&amp;rsquo;est la première fois que je les communique. Je suis ouvert aux synergies pour les projets 5.7., 5.</description>
    </item>
    
    <item>
      <title>Installer un cluster Kubernetes sur baremetal avec metalLB et Rancher 2</title>
      <link>https://leandeep.com/installer-un-cluster-kubernetes-sur-baremetal-avec-metallb-et-rancher-2/</link>
      <pubDate>Thu, 19 Nov 2020 23:12:00 +0200</pubDate>
      
      <guid>https://leandeep.com/installer-un-cluster-kubernetes-sur-baremetal-avec-metallb-et-rancher-2/</guid>
      <description>Dans cet article, nous allons voir comment installer un cluster Kubernetes sur un ou plusieurs noeuds &amp;ldquo;physiques&amp;rdquo;. On est sur de l&amp;rsquo;auto-hébergement. MetalLB sera utilisé pour remplacer les load balancers des &amp;ldquo;clouders&amp;rdquo;. MetalLB est une implémentation de Load Balancer pour les clusters Kubernetes Bare Metal, utilisant des protocoles de routage standard. Rancher 2 sera également utilisé. On aurait pu utiliser kubeadm mais cette solution nous simplifie clairement la vie.
 Pré-requis  Docker   Lancer Rancher 2 via Docker sudo docker run -d --privileged --restart=unless-stopped -p 8443:443 rancher/rancher  Provisionner un cluster k8s Une fois le serveur Rancher démarré, connectez-vous en créant un compte admin puis créez un cluster Kubernetes.</description>
    </item>
    
    <item>
      <title>Installer Tensorflow 2 avec GPU backend avec un eGPU, Kubuntu 20.04 et Docker</title>
      <link>https://leandeep.com/installer-tensorflow-2-avec-gpu-backend-avec-un-egpu-kubuntu-20.04-et-docker/</link>
      <pubDate>Sun, 15 Nov 2020 12:19:00 +0000</pubDate>
      
      <guid>https://leandeep.com/installer-tensorflow-2-avec-gpu-backend-avec-un-egpu-kubuntu-20.04-et-docker/</guid>
      <description>Dans deux articles précédents, nous avions vu comment installer Tensorflow 1 et 2 avec GPU support sur Ubuntu 18.04 avec une carte graphique Gefore GTX 1080 ou une plus ancienne carte plus supportée, la Geforce GTX 660 Ti.
 J&amp;rsquo;ai récemment fait un système upgrade et suis passé sur Kubuntu 20.04. Il est excellant et très stable, je le recommande grandement. Je suis toujours partisan des stations de Deep Learning personnelles (non dans le Cloud).</description>
    </item>
    
    <item>
      <title>Installer les dernières distros Linux avec PXE</title>
      <link>https://leandeep.com/installer-les-derni%C3%A8res-distros-linux-avec-pxe/</link>
      <pubDate>Fri, 06 Nov 2020 19:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/installer-les-derni%C3%A8res-distros-linux-avec-pxe/</guid>
      <description>Introduction Aujourd&amp;rsquo;hui j&amp;rsquo;ai besoin de réinstaller mon système. Je vais installer Ubuntu 20.04. Etant donné que c&amp;rsquo;est une tâche que je répète régulièrement car j&amp;rsquo;expérimente beaucoup, je préfère me passer de clés USB car cela me fait perdre du temps. Je préfère utiliser un amorçage PXE qui me permet de charger des ISOs depuis mon réseau local. Dans cet article, nous allons rester simple et nous contenter de mettre à disposition des distro Linux.</description>
    </item>
    
    <item>
      <title>Créer un proxy MITM pour mesurer la performance des APIs</title>
      <link>https://leandeep.com/cr%C3%A9er-un-proxy-mitm-pour-mesurer-la-performance-des-apis/</link>
      <pubDate>Mon, 26 Oct 2020 20:44:00 +0000</pubDate>
      
      <guid>https://leandeep.com/cr%C3%A9er-un-proxy-mitm-pour-mesurer-la-performance-des-apis/</guid>
      <description>Introduction Nous allons voir dans cet article comment mettre en place un proxy MITM pour mesurer la performance d&amp;rsquo;une API. Nous parlons ici d&amp;rsquo;une solution basique &amp;ldquo;quick win&amp;rdquo; à mettre en place en 5 minutes. Je ne parle pas d&amp;rsquo;une solution APM évoluée où il faut installer un SDK&amp;hellip;
 Installation docker run --rm -it \ -p 8080:8080 \ -p 8081:8081 \ oeeckhoutte/mitmproxy mitmweb \ --web-host 0.0.0.0  Usage watch -n 5 &amp;quot;curl -k --proxy http://127.</description>
    </item>
    
  </channel>
</rss>
