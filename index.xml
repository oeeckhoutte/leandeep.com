<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bienvenue sur le site de Lean Deep</title>
    <link>https://leandeep.com/</link>
    <description>Recent content on Bienvenue sur le site de Lean Deep</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 16 Mar 2020 23:49:00 +0200</lastBuildDate>
    
	<atom:link href="https://leandeep.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reverse Proxy manager Nginx</title>
      <link>https://leandeep.com/reverse-proxy-manager-nginx/</link>
      <pubDate>Mon, 16 Mar 2020 23:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/reverse-proxy-manager-nginx/</guid>
      <description>Introduction Dans cet article nous allons voir comment installer le reverse proxy manager Nginx nginxproxymanager. Ce manager est vraiment très bien. Il permet par exemple de facilement créer des ACLs, définir des proxy hosts, rediretions, page custom 404, d&#39;avoir de l&#39;audit, créer des certificats let&#39;s encrypt, activer l&#39;HTTP/2, l&#39;HSTS. Il est vraiment top gun ce projet. C&#39;est un concurrent de Traefik.
 Installation Dans un répertoire par exemple mkdir ~/nginxproxymanager &amp;amp;&amp;amp; cd ~/nginxproxymanager, créer les 2 dossiers suivants: data et letsencrypt</description>
    </item>
    
    <item>
      <title>Créer un serveur OpenVPN en 5 minutes</title>
      <link>https://leandeep.com/cr%C3%A9er-un-serveur-openvpn-en-5-minutes/</link>
      <pubDate>Thu, 12 Mar 2020 19:35:00 +0200</pubDate>
      
      <guid>https://leandeep.com/cr%C3%A9er-un-serveur-openvpn-en-5-minutes/</guid>
      <description>Dans cet article, vous trouverez un script permettant de créer une serveur OpenVPN sur Ubuntu 18.04.
En sortie du script, un fichier config.ovpn sera créé. Il suffit de l&#39;ajouter à un client VPN (i.e. tunnelblick sur Mac) et d&#39;établir une connexion.
Vous pourrez vous connecter à la machine sur laquelle est installée le serveur VPN. Il suffit d&#39;exécutez la commande ssh VOTRE_USER@10.8.0.1&amp;hellip;
Voici le fameux script:
#!/bin/bash if grep -qs &amp;quot;Ubuntu 16.</description>
    </item>
    
    <item>
      <title>Combiner plusieurs connexions internet pour booster son debit</title>
      <link>https://leandeep.com/combiner-plusieurs-connexions-internet-pour-booster-son-debit/</link>
      <pubDate>Sun, 08 Mar 2020 17:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/combiner-plusieurs-connexions-internet-pour-booster-son-debit/</guid>
      <description>Introduction Dans cet article nous allons voir comment booster son débit internet entrant et sortant en combinant son forfait internet et son forfait mobile.
 Analyse des réseaux Box ADSL
Voici un speed test réalisé en connectant mon ordinateur à ma box internet via Wifi.
 4G
Voici un speed test réalisé en connectant mon ordinateur à mon smartphone via USB.
 Configuration Pour combiner le réseau de votre box et le réseau de votre Smartphone sur votre ordinateur, il vous faut créer un proxy socks local.</description>
    </item>
    
    <item>
      <title>Installer une barre de recherche Algolia sur son blog</title>
      <link>https://leandeep.com/installer-une-barre-de-recherche-algolia-sur-son-blog/</link>
      <pubDate>Sun, 01 Mar 2020 19:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/installer-une-barre-de-recherche-algolia-sur-son-blog/</guid>
      <description>Introduction L&#39;objectif de cet article est de voir comment installer un moteur de recherche Algolia sur son blog Hugo pour pouvoir rechercher n&#39;importe quel contenu.
Le résultat final sur mon blog:
 Création de compte Algolia La première chose à faire est de créer un compte Algolia.
Vous pouvez souscrire à un plan community. Cela vous permettra de créer une barre de recherche gratuitement.
Créer une application.
Créer ensuite un indice.</description>
    </item>
    
    <item>
      <title>Convertir des images dmg ou img en iso sur OSX</title>
      <link>https://leandeep.com/convertir-des-images-dmg-ou-img-en-iso-sur-osx/</link>
      <pubDate>Thu, 23 Jan 2020 20:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/convertir-des-images-dmg-ou-img-en-iso-sur-osx/</guid>
      <description>Convertir une image img en iso
hdiutil convert input.img -format UDTO -o output.iso  Convertir une image dmg en iso
hdiutil convert input.dmg -format UDTO -o output.iso </description>
    </item>
    
    <item>
      <title>Mettre en place du monitoring simple sur Ubuntu et recevoir des alertes Slack</title>
      <link>https://leandeep.com/mettre-en-place-du-monitoring-simple-sur-ubuntu-et-recevoir-des-alertes-slack/</link>
      <pubDate>Sun, 19 Jan 2020 22:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/mettre-en-place-du-monitoring-simple-sur-ubuntu-et-recevoir-des-alertes-slack/</guid>
      <description>Introduction L&#39;objectif de cet article est de voir comment mettre en place du monitoring simple sur son serveur Ubuntu avec des alertes Slack et des rapports hebdomadaires.
 Installation de monit sudo apt install monit -y  Commandes utiles Vérifier qu&#39;il n&#39;y a pas d&#39;erreur dans la configuration.
sudo monit -t Si tout est bon, on peut reloader la monit et prendre en compte les changements de configuration avec la commande:</description>
    </item>
    
    <item>
      <title>Comparaison de strings et logique floue</title>
      <link>https://leandeep.com/tips/logique-flou-dans-comparaison-de-strings/</link>
      <pubDate>Thu, 16 Jan 2020 16:20:04 -0700</pubDate>
      
      <guid>https://leandeep.com/tips/logique-flou-dans-comparaison-de-strings/</guid>
      <description>Pour implémenter dans la logique floue pour comparer deux strings, on peut utiliser la distance de Levenshtein.
Voici le code permettant de calculer cette distance. Rien de particulier, on retrouve partout ce code sur internet.
import numpy as np def levenshtein_ratio_and_distance(s, t, ratio_calc = False): &amp;quot;&amp;quot;&amp;quot; levenshtein_ratio_and_distance: Calculates levenshtein distance between two strings. If ratio_calc = True, the function computes the levenshtein distance ratio of similarity between two strings For all i and j, distance[i,j] will contain the Levenshtein distance between the first i characters of s and the first j characters of t &amp;quot;&amp;quot;&amp;quot; # Initialize matrix of zeros rows = len(s)+1 cols = len(t)+1 distance = np.</description>
    </item>
    
    <item>
      <title>Eviter les if ou try/except avec les dictionnaires</title>
      <link>https://leandeep.com/tips/handle-keyerrors-dans-les-dict-avec-defaultdict/</link>
      <pubDate>Thu, 16 Jan 2020 01:20:04 -0700</pubDate>
      
      <guid>https://leandeep.com/tips/handle-keyerrors-dans-les-dict-avec-defaultdict/</guid>
      <description>Manipuler des dictionnaires Python est facile. Pour les transformer on peut utiliser des dict comprehension. Par exemple, pour inverser un dictionnaire on peut le faire en une ligne de code.
prenoms = {&#39;titi&#39;: 1, &#39;tata&#39;: 2, &#39;toto&#39;: 3} invert_prenoms = {v: k for k, v in prenoms.iteritems()} print(invert_prenoms) {1: &#39;titi&#39;, 2: &#39;tata&#39;, 3: &#39;toto&#39;} Pour sélectionner une valeur à partir d&#39;une clé, on peut
 soit tester si une clé existe dans le dict ou catcher l&#39;exception KeyError avec try/except ou on peut utiliser un defaultdict, ce qui permet d&#39;avoir du code plus propre, et plus facilement testable.</description>
    </item>
    
    <item>
      <title>Slicer de manière Pythonique un set</title>
      <link>https://leandeep.com/tips/slicer-un-set-de-maniere-pythonique/</link>
      <pubDate>Wed, 15 Jan 2020 15:20:04 -0700</pubDate>
      
      <guid>https://leandeep.com/tips/slicer-un-set-de-maniere-pythonique/</guid>
      <description>Ce tip décrit comment slicer (découper) un set de manière Pythonique.
Les sets sont des iterables. On peut donc utiliser la méthode itertools.islice qui va nous permettre de créer un iterator construit à partir d&#39;un sous-ensemble du set de départ.
import itertools prenoms_list = [&#39;titi&#39;, &#39;tata&#39;, &#39;totot&#39;, &#39;titi&#39;] prenoms_set = set(prenoms_list) small_prenoms_set = set(itertools.islice(prenoms_set, 2)) </description>
    </item>
    
    <item>
      <title>Utiliser zip pour itérer sur deux listes</title>
      <link>https://leandeep.com/tips/utiliser-zip-pour-iterer-sur-deux-listes/</link>
      <pubDate>Tue, 14 Jan 2020 21:20:04 -0700</pubDate>
      
      <guid>https://leandeep.com/tips/utiliser-zip-pour-iterer-sur-deux-listes/</guid>
      <description>La bonne approche pour itérer sur deux listes est de créer deux variables, par exemple liste_un et liste_deux et d&#39;utiliser zip en passant en paramètre les 2 variables.
Anti-pattern (Pas bien!) nombres = [1, 2, 3] prenoms = [&amp;quot;titi&amp;quot;, &amp;quot;tata&amp;quot;, &amp;quot;toto&amp;quot;] for idx in range(len(nombres)): print(nombres[idx], prenoms[idx]) Bonne pratique (Bien!) Dans les 2 cas, le résultat est identique à savoir:
1 titi 2 tata 3 toto Mais voici une manière plus Pythonique d&#39;itérer sur ces 2 listes.</description>
    </item>
    
  </channel>
</rss>