<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SSH on Bienvenue sur le site de Lean Deep</title>
    <link>https://leandeep.com/tags/ssh/</link>
    <description>Recent content in SSH on Bienvenue sur le site de Lean Deep</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 25 Sep 2020 18:59:00 +0200</lastBuildDate><atom:link href="https://leandeep.com/tags/ssh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Remote Desktop over SSH avec X2GO sur Ubuntu 18.04</title>
      <link>https://leandeep.com/remote-desktop-over-ssh-avec-x2go-sur-ubuntu-18.04/</link>
      <pubDate>Fri, 25 Sep 2020 18:59:00 +0200</pubDate>
      
      <guid>https://leandeep.com/remote-desktop-over-ssh-avec-x2go-sur-ubuntu-18.04/</guid>
      <description>Introduction Dans cet article, nous allons voir comment mettre en place du remote desktop sur Ubuntu 18.04. On ne va pas installer un serveur VNC. Ici, on va faire du X11 forwarding. Le protocole NX va nous permettre de transmettre des données vidéos, audio, etc. via une connexion SSH.
 Installation de la partie serveur sur Ubuntu Installation de X2GO
# On ajoute le package permettant d&#39;ajouter des PPA sudo apt-get install software-properties-common # On ajoute X2Go PPA sudo add-apt-repository ppa:x2go/stable # On met à jour la base de données contenant les packages disponibles sudo apt-get update # On installe X2GO sudo apt-get install x2goserver x2goserver-xsession  Installation d&amp;rsquo;un desktop environment</description>
    </item>
    
    <item>
      <title>Commandes de base SSH</title>
      <link>https://leandeep.com/commandes-de-base-ssh/</link>
      <pubDate>Wed, 10 Oct 2012 09:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/commandes-de-base-ssh/</guid>
      <description>Connexion Dans un terminal, exécuter la commande suivante:
ssh user@host  Par défaut le port 22 est utilisé
  Se connecter sur un port particulier:
ssh user@host -p port  Créer des raccourcis pour vous connecter plus facilement à différents hosts:
Créer un fichier de config ~/.ssh/config et gérer vos config comme ceci:
Host hostname1 HostName 192.168.0.10 User olivier Port 1234 Host hostname2 PubkeyAuthentication yes IdentityFile ~/.ssh/server_vps1 Ensuite, il vous suffit d&amp;rsquo;utiliser les commandes suivantes pour vous connecter à vos différents hosts:</description>
    </item>
    
  </channel>
</rss>
