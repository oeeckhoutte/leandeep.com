<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Solidity on Bienvenue sur le site de Lean Deep</title>
    <link>https://leandeep.com/tags/solidity/</link>
    <description>Recent content in Solidity on Bienvenue sur le site de Lean Deep</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 06 Sep 2020 09:49:00 +0200</lastBuildDate><atom:link href="https://leandeep.com/tags/solidity/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Créer son premier smart contract pour Ethereum</title>
      <link>https://leandeep.com/cr%C3%A9er-son-premier-smart-contract-pour-ethereum/</link>
      <pubDate>Sun, 06 Sep 2020 09:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/cr%C3%A9er-son-premier-smart-contract-pour-ethereum/</guid>
      <description>Installation des pré-requis Truffle npm install -g truffle  Ganache Option 1:
Rendez-vous à l&amp;rsquo;adresse http://truffleframework.com/ganache et cliquer sur le bouton &amp;ldquo;Download&amp;rdquo;.
Option 2:
Installation via le terminal
npm install ganache-cli -g puis démarrage du server Ganache via la commande:
ganache-cli -p 7545 -i 47 -l 4700000  Initialisation du projet  Il est possible d&amp;rsquo;initialiser son project avec la commande truffle init mais des boilerplates prêts à l&amp;rsquo;emploi existent.</description>
    </item>
    
    <item>
      <title>Solidity fondamentals</title>
      <link>https://leandeep.com/solidity-fondamentals/</link>
      <pubDate>Thu, 13 Feb 2020 16:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/solidity-fondamentals/</guid>
      <description>Deploy a first smart contract. The base For rapid prototyping use Remix and select &amp;ldquo;Javascript VM&amp;rdquo;.
 Simplest commented Contract example
pragma solidity ^0.4.24; // Specify compiler version contract ExampleOne { // Contract definition uint256 myVar; // storage varible. Can only store positive integer with a max value of 256 bits function setMyVar(uint256 _myVar) public { // Public method than can be called externally and a parameter has to be passed myVar = _myVar; } }  Compile, deploy and interact with the Smart Contract still via Remix.</description>
    </item>
    
  </channel>
</rss>
