<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tensorflow2 on Bienvenue sur le site de Lean Deep</title>
    <link>https://leandeep.com/tags/tensorflow2/</link>
    <description>Recent content in Tensorflow2 on Bienvenue sur le site de Lean Deep</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 04 Jan 2020 18:12:00 +0200</lastBuildDate><atom:link href="https://leandeep.com/tags/tensorflow2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Classification avec Tensorflow 2</title>
      <link>https://leandeep.com/classification-avec-tensorflow-2/</link>
      <pubDate>Sat, 04 Jan 2020 18:12:00 +0200</pubDate>
      
      <guid>https://leandeep.com/classification-avec-tensorflow-2/</guid>
      <description>Introduction Dans cet article, nous allons entrainer un modèle à classifier les Iris avec 2 algorithmes différents présents dans Tensorflow 2:
 Régression logistique Gradient boosting  Nous allons utiliser le dataset opensource Iris.
 Attention l&amp;rsquo;algorithme &amp;ldquo;Régression logistique&amp;rdquo; prête à confusion. Même si le nom de cet algorithme contient régression, il permet de faire de la classification et donc de prédire une catégorie et non une valeur continue.
  Régression logistique Chargement des modules:</description>
    </item>
    
    <item>
      <title>Premier modèle VAE avec Tensorflow 2</title>
      <link>https://leandeep.com/premier-mod%C3%A8le-vae-avec-tensorflow-2/</link>
      <pubDate>Fri, 20 Dec 2019 19:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/premier-mod%C3%A8le-vae-avec-tensorflow-2/</guid>
      <description>Introduction Dans cet article, nous allons créer un modèle VAE qui va nous aider à générer des nouveaux digits. Nous partirons du dataset MNIST. Chaque image de ce dataset est normalisée dans un cadre faisant 28x28 pixels.
 Variational Autoencoders (VAE) Chargement des modules
from __future__ import division, absolute_import, print_function, unicode_literals import tensorflow as tf import time import numpy as np import os import matplotlib.pyplot as plt import PIL import glob import imageio from IPython import display  Chargement du dataset MNIST:</description>
    </item>
    
    <item>
      <title>Régression linéaire avec Tensorflow 2</title>
      <link>https://leandeep.com/r%C3%A9gression-lin%C3%A9aire-avec-tensorflow-2/</link>
      <pubDate>Tue, 17 Dec 2019 19:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/r%C3%A9gression-lin%C3%A9aire-avec-tensorflow-2/</guid>
      <description>Introduction Pourquoi multiplier les framework Machine Learning quand on peut tout faire avec Tensorflow ? C&amp;rsquo;est une de mes reflexions du moment. Dans cet article, nous allons voir à quel point il est simple de faire une regression linéaire avec Tensorflow 2 avec le dataset Boston Housing.
 Régression linéaire Chargement des modules:
from __future__ import print_function, absolute_import, unicode_literals, division import tensorflow as tf import seaborn as sb import numpy as np import pandas as pd from tensorflow.</description>
    </item>
    
    <item>
      <title>Premier ConvNet avec Tensorflow 2</title>
      <link>https://leandeep.com/premier-convnet-avec-tensorflow-2/</link>
      <pubDate>Tue, 10 Dec 2019 19:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/premier-convnet-avec-tensorflow-2/</guid>
      <description>Introduction Tensorflow 2 beta est récemment sorti. Beaucoup de choses ont changé et il est maintenant beaucoup plus simple à utiliser. Keras a aussi été pleinement intégré. On peut l&amp;rsquo;utiliser pour des applications large-scale. Le graphe d&amp;rsquo;exécution est maintenant automatiquement créé par le framework. Le Python est converti est graphe. Dans cet article, nous allons créer un simple Convnet avec 3 couches en quelques lignes de codes pour se rendre compte à quel point l&amp;rsquo;utilisation de Tensorflow a été simplifiée.</description>
    </item>
    
    <item>
      <title>Premier ConvNet avec Tensorflow 2</title>
      <link>https://leandeep.com/premier-convnet-avec-tensorflow-2/</link>
      <pubDate>Tue, 10 Dec 2019 19:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/premier-convnet-avec-tensorflow-2/</guid>
      <description>Introduction Tensorflow 2 beta est récemment sorti. Beaucoup de choses ont changé et il est maintenant beaucoup plus simple à utiliser. Keras a aussi été pleinement intégré. On peut l&amp;rsquo;utiliser pour des applications large-scale. Le graphe d&amp;rsquo;exécution est maintenant automatiquement créé par le framework. Le Python est converti est graphe. Dans cet article, nous allons créer un simple Convnet avec 3 couches en quelques lignes de codes pour se rendre compte à quel point l&amp;rsquo;utilisation de Tensorflow a été simplifiée.</description>
    </item>
    
  </channel>
</rss>
