<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on Lean Deep Tech blog</title>
    <link>https://leandeep.com/tags/algorithm/</link>
    <description>Recent content in Algorithm on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 18 Sep 2012 08:08:00 +0000</lastBuildDate><atom:link href="https://leandeep.com/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>La notation &#34;Big O&#34;</title>
      <link>https://leandeep.com/la-notation-big-o/</link>
      <pubDate>Tue, 18 Sep 2012 08:08:00 +0000</pubDate>
      
      <guid>https://leandeep.com/la-notation-big-o/</guid>
      <description>La notation &amp;ldquo;big O&amp;rdquo; est utilisée pour analyser et comparer l&amp;rsquo;efficacité des algorithmes en termes de temps d&amp;rsquo;exécution ou de consommation de ressources.
La notation big O est notée généralement comme O(f(n)), où f(n) est une fonction qui représente la complexité de l&amp;rsquo;algorithme en fonction de la taille de l&amp;rsquo;entrée, n. Le O indique l&amp;rsquo;ordre de grandeur ou la limite supérieure de la complexité.
Par exemple, si un algorithme a une complexité de O(n), cela signifie que le temps d&amp;rsquo;exécution de l&amp;rsquo;algorithme est linéairement proportionnel à la taille de l&amp;rsquo;entrée.</description>
    </item>
    
  </channel>
</rss>
