<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ethereum on Lean Deep Tech blog</title>
    <link>https://leandeep.com/tags/ethereum/</link>
    <description>Recent content in Ethereum on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 06 Sep 2021 08:08:00 +0000</lastBuildDate><atom:link href="https://leandeep.com/tags/ethereum/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pas assez de gaz pour développer sur Ethereum</title>
      <link>https://leandeep.com/pas-assez-de-gaz-pour-d%C3%A9velopper-sur-ethereum/</link>
      <pubDate>Mon, 06 Sep 2021 08:08:00 +0000</pubDate>
      
      <guid>https://leandeep.com/pas-assez-de-gaz-pour-d%C3%A9velopper-sur-ethereum/</guid>
      <description>Introduction Voici un tip pour éviter de devoir attendre 24h avant de pouvoir réclamer des Keth via les Faucets de Kovan. Sans cela, et lorsque vous avez brulé tout votre capital à force de tester sans cesse votre code, c&amp;rsquo;est très compliqué d&amp;rsquo;avancer et d&amp;rsquo;achever le développement de son smart contract Solidity (ou dApps web3). On perd du temps alors qu&amp;rsquo;on n&amp;rsquo;est même pas en prod&amp;hellip;
Ce tip permet de s&amp;rsquo;affranchir temporairement de l&amp;rsquo;erreur suivante: {&#39;code&#39;: -32010, &#39;message&#39;: &#39;Insufficient funds.</description>
    </item>
    
    <item>
      <title>Créer des NFTs sur Ethereum</title>
      <link>https://leandeep.com/cr%C3%A9er-des-nfts-sur-ethereum/</link>
      <pubDate>Fri, 11 Jun 2021 15:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/cr%C3%A9er-des-nfts-sur-ethereum/</guid>
      <description>Dans cet article, nous allons voir comment créer des NFT sur Ethereum en utilisant le projet Python Brownie. L&amp;rsquo;ensemble du tutorial a été réalisé avec Python 3.8. NodeJS sera également nécessaire pour installer Ganache. Dans cet article, j&amp;rsquo;ai utilisé la v10.23.3 ainsi qu&amp;rsquo;NPM 6.14.11.
 Qu&amp;rsquo;est-ce que Brownie ? Similaire au framework Truffle, Brownie permet de développer, tester et déployer des Smart Contracts. A la différence de Truffle, il est écrit en Python 3.</description>
    </item>
    
    <item>
      <title>Faire tourner un noeud Ethereum</title>
      <link>https://leandeep.com/faire-tourner-un-noeud-ethereum/</link>
      <pubDate>Wed, 16 Dec 2020 21:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/faire-tourner-un-noeud-ethereum/</guid>
      <description>Ce court article décrit comment faire tourner un noeud Ethereum sur n&amp;rsquo;importe quel OS.
 Noeud sur Rinkeby With Docker
docker pull ethereum/client-go:latest mkdir ~/.geth-rinkeby docker run --name eth -p 8546:8546 -v ~/.geth-rinkeby:/geth -it \ ethereum/client-go --rinkeby --ws --ipcdisable \ --wsaddr 0.0.0.0 --wsorigins=&amp;quot;*&amp;quot; --datadir /geth Pour détacher le running container, sans le stopper, vous pouvez utiliser les commandes suivantes: Ctrl + P, Ctrl + Q
 Si le container est stoppé, vous pouvez le relancer avec la commande suivante: docker start -i eth</description>
    </item>
    
    <item>
      <title>Créer son premier smart contract pour Ethereum</title>
      <link>https://leandeep.com/cr%C3%A9er-son-premier-smart-contract-pour-ethereum/</link>
      <pubDate>Sun, 06 Sep 2020 09:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/cr%C3%A9er-son-premier-smart-contract-pour-ethereum/</guid>
      <description>Installation des pré-requis Truffle npm install -g truffle  Ganache Option 1:
Rendez-vous à l&amp;rsquo;adresse http://truffleframework.com/ganache et cliquer sur le bouton &amp;ldquo;Download&amp;rdquo;.
Option 2:
Installation via le terminal
npm install ganache-cli -g puis démarrage du server Ganache via la commande:
ganache-cli -p 7545 -i 47 -l 4700000  Initialisation du projet  Il est possible d&amp;rsquo;initialiser son project avec la commande truffle init mais des boilerplates prêts à l&amp;rsquo;emploi existent.</description>
    </item>
    
    <item>
      <title>Solidity fondamentals</title>
      <link>https://leandeep.com/solidity-fondamentals/</link>
      <pubDate>Thu, 13 Feb 2020 16:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/solidity-fondamentals/</guid>
      <description>Deploy a first smart contract. The base For rapid prototyping use Remix and select &amp;ldquo;Javascript VM&amp;rdquo;.
 Simplest commented Contract example
pragma solidity ^0.4.24; // Specify compiler version contract ExampleOne { // Contract definition uint256 myVar; // storage varible. Can only store positive integer with a max value of 256 bits function setMyVar(uint256 _myVar) public { // Public method than can be called externally and a parameter has to be passed myVar = _myVar; } }  Compile, deploy and interact with the Smart Contract still via Remix.</description>
    </item>
    
  </channel>
</rss>
