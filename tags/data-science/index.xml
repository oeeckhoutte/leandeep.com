<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Science on Lean Deep Tech blog</title>
    <link>https://leandeep.com/tags/data-science/</link>
    <description>Recent content in Data Science on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 02 Jan 2023 12:00:00 +0200</lastBuildDate><atom:link href="https://leandeep.com/tags/data-science/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Data Version Control pour vos projets data ou algo-trading</title>
      <link>https://leandeep.com/data-version-control-pour-vos-projets-data-ou-algo-trading/</link>
      <pubDate>Mon, 02 Jan 2023 12:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/data-version-control-pour-vos-projets-data-ou-algo-trading/</guid>
      <description>Introduction Dans cet article, nous allons voir comment versionner nos datasets et notre code. Les datasets ne seront pas stockés sur git car cet outil n&amp;rsquo;est pas fait pour stocker des fichiers volumineux. Il faut donc stocker les données ailleurs. Ici je vais les stocker sur Google Drive. DVC (Data Version Control) va permettre de versionner les data en créant une référence (un hash) qui sera stocké dans le commit git.</description>
    </item>
    
    <item>
      <title>Installer Tensorflow 2 avec GPU backend avec un eGPU, Kubuntu 20.04 et Docker</title>
      <link>https://leandeep.com/installer-tensorflow-2-avec-gpu-backend-avec-un-egpu-kubuntu-20.04-et-docker/</link>
      <pubDate>Sun, 15 Nov 2020 12:19:00 +0000</pubDate>
      
      <guid>https://leandeep.com/installer-tensorflow-2-avec-gpu-backend-avec-un-egpu-kubuntu-20.04-et-docker/</guid>
      <description>Dans deux articles précédents, nous avions vu comment installer Tensorflow 1 et 2 avec GPU support sur Ubuntu 18.04 avec une carte graphique Gefore GTX 1080 ou une plus ancienne carte plus supportée, la Geforce GTX 660 Ti.
J&amp;rsquo;ai récemment fait un système upgrade et suis passé sur Kubuntu 20.04. Il est excellant et très stable, je le recommande grandement. Je suis toujours partisan des stations de Deep Learning personnelles (non dans le Cloud).</description>
    </item>
    
    <item>
      <title>Installer XGBoost, LightGBM et CatBoost sur Ubuntu 18.04</title>
      <link>https://leandeep.com/installer-xgboost-lightgbm-et-catboost-sur-ubuntu-18.04/</link>
      <pubDate>Fri, 19 Jul 2019 11:14:00 +0000</pubDate>
      
      <guid>https://leandeep.com/installer-xgboost-lightgbm-et-catboost-sur-ubuntu-18.04/</guid>
      <description>Installation de XGBoost Installation simple
Exécuter la commande suivante:
pip install xgboost &amp;ldquo;The default open-source XGBoost packages already include GPU support.&amp;rdquo;
Build from source
Si cela ne fonctionne pas, compiler et installer XGBoost depuis les sources.
Installer cmake pour builder xgboost. La version CMake 3.12 ou plus est requise.
sudo apt-get update sudo apt install -y cmake cmake --version Si ce n&amp;rsquo;est pas la bonne version désinstallez le avant de le réinstaller manuellement:</description>
    </item>
    
    <item>
      <title>Installer un eGPU sur un Intel Nuc avec Ubuntu 18.04</title>
      <link>https://leandeep.com/installer-un-egpu-sur-un-intel-nuc-avec-ubuntu-18.04/</link>
      <pubDate>Thu, 18 Jul 2019 12:19:00 +0000</pubDate>
      
      <guid>https://leandeep.com/installer-un-egpu-sur-un-intel-nuc-avec-ubuntu-18.04/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://leandeep.com/images/IMG_35783.JPG&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mastering Pandas</title>
      <link>https://leandeep.com/mastering-pandas/</link>
      <pubDate>Sat, 16 Feb 2019 13:47:00 +0000</pubDate>
      
      <guid>https://leandeep.com/mastering-pandas/</guid>
      <description>Cela fait pas mal de temps que j&amp;rsquo;utilise Pandas. Dans cet article je vais essayer de réunir et synthétiser tous les tips &amp;amp; tricks à savoir (comme si j&amp;rsquo;utilisais Jupyter Notebook).
Voici la liste des tips:
Introduction à Pandas Lire des données tabulaires Sélectionner une série Pandas Parenthèses Pandas Renommer des colonnes Effacer une colonne Effacer toutes les colonnes sauf Trier Filtrer Filtres multi-critères Examiner un dataset Numéro, index et contenu de la ligne lors d&amp;rsquo;une itération Introduction à Pandas C&amp;rsquo;est une librairie opensource d&amp;rsquo;analyse de données qui fourni des structures de données ainsi que des outils d&amp;rsquo;analyse faciles à utiliser.</description>
    </item>
    
    <item>
      <title>Manipulation de CSV volumineux en Data Science </title>
      <link>https://leandeep.com/manipulation-de-csv-volumineux-en-data-science/</link>
      <pubDate>Fri, 08 Feb 2019 11:41:00 +0000</pubDate>
      
      <guid>https://leandeep.com/manipulation-de-csv-volumineux-en-data-science/</guid>
      <description>Il existe de nombreuses librairies en Python pour manipuler des fichiers CSV. Je recommande l&amp;rsquo;usage des langages de haut niveau comme Python le plus possible car cela permet d&amp;rsquo;automatiser, &amp;ldquo;d&amp;rsquo;APIser&amp;rdquo; et d&amp;rsquo;industrialiser au maximum ses use cases. Mais parfois lorsqu&amp;rsquo;il faut tailler dans la masse sur des fichiers extrèmement volumineux, rien de tel que les bonnes vieilles méthodes de DevOps :) .
AWK à la rescousse pour par exemple extraire toutes les entreprises situées dans le Nord sur un fichier de plusieurs GB.</description>
    </item>
    
    <item>
      <title>Comment lire une Matrice de confusion</title>
      <link>https://leandeep.com/comment-lire-une-matrice-de-confusion/</link>
      <pubDate>Thu, 01 Oct 2015 20:30:00 +0000</pubDate>
      
      <guid>https://leandeep.com/comment-lire-une-matrice-de-confusion/</guid>
      <description>Chaque colonne de la matrice représente le nombre d&amp;rsquo;occurrences d&amp;rsquo;une classe estimée, tandis que chaque ligne représente le nombre d&amp;rsquo;occurrences d&amp;rsquo;une classe réelle (ou de référence). Les occurrences utilisées pour chacune de ces 2 classes doivent être différentes.
Exemple:
On considère un système de classification dont le but est de classer du mail (courrier électronique) en deux classes:
courriel pertinent ou pourriel intempestif. On va vouloir savoir:
Combien de courriels seront faussement estimés comme des pourriels (fausses alarmes) et combien de pourriels ne seront pas estimés comme tels (non détections) et donc classifiés comme courriels.</description>
    </item>
    
  </channel>
</rss>
