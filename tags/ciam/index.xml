<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ciam on Lean Deep Tech blog</title>
    <link>https://leandeep.com/tags/ciam/</link>
    <description>Recent content in ciam on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 13 Nov 2024 07:00:00 +0200</lastBuildDate><atom:link href="https://leandeep.com/tags/ciam/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Configure Keycloak to secure your apps and API endpoints</title>
      <link>https://leandeep.com/configure-keycloak-to-secure-your-apps-and-api-endpoints/</link>
      <pubDate>Wed, 13 Nov 2024 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/configure-keycloak-to-secure-your-apps-and-api-endpoints/</guid>
      <description>In this brief article we are going to create a basic realm in Keycloak to secure an API. It&amp;rsquo;s the minimal setup. No RBAC, no security defense, and no Google/ Facebook Connect&amp;hellip; configs are explained in this article. I will certainly create other articles for these other concepts.
Installation Via Docker compose
x-logging: &amp;amp;logging driver: &amp;#34;json-file&amp;#34; options: max-size: &amp;#34;10m&amp;#34; max-file: &amp;#34;3&amp;#34; services: postgres: image: postgres:${POSTGRES_VERSION} restart: unless-stopped healthcheck: test: [&amp;#34;CMD&amp;#34;, &amp;#34;pg_isready&amp;#34;, &amp;#34;-U&amp;#34;, &amp;#34;keycloak&amp;#34;] environment: POSTGRES_DB: keycloak POSTGRES_USER: keycloak POSTGRES_PASSWORD: password volumes: - type: tmpfs target: /var/lib/postgresql/data tmpfs: size: 100000000 logging: *logging keycloak: image: quay.</description>
    </item>
    
  </channel>
</rss>
