<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on Lean Deep Tech blog</title>
    <link>https://leandeep.com/tags/github/</link>
    <description>Recent content in Github on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 24 Apr 2022 22:45:00 +0000</lastBuildDate><atom:link href="https://leandeep.com/tags/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Créer des Pull Requests sur Github depuis son terminal</title>
      <link>https://leandeep.com/cr%C3%A9er-des-pull-requests-sur-github-depuis-son-terminal/</link>
      <pubDate>Sun, 24 Apr 2022 22:45:00 +0000</pubDate>
      
      <guid>https://leandeep.com/cr%C3%A9er-des-pull-requests-sur-github-depuis-son-terminal/</guid>
      <description>Dans ce court article, nous allons voir comment créer des PRs automatiquement via le cli; toujours dans le but de booster sa productivité.
Installation du client cli Github Adresse officielle du package
brew install gh gh auth login Création de la PR gh pr create --base master --head your_branch --title &amp;#34;$(git log -1 --pretty=format:&amp;#39;%s&amp;#39;)&amp;#34; --body &amp;#34;$(cat pull_request_template.md)&amp;#34; Raccourcis pour récupérer les infos du dernier commit Editer le fichier ~/.zshrc et ajouter les fonctions suivantes:</description>
    </item>
    
    <item>
      <title>Deployer un package sur github via curl</title>
      <link>https://leandeep.com/deployer-un-package-sur-github-via-curl/</link>
      <pubDate>Mon, 20 Apr 2020 19:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/deployer-un-package-sur-github-via-curl/</guid>
      <description>Introduction Cet bref article montre comment déployer un package sur Github via une simple commande curl.
Dans notre cas, il s&amp;rsquo;agit d&amp;rsquo;un jar mais cela s&amp;rsquo;applique à tous les types de packages supportés par Github:
Docker Maven Nuget Ruby gem npm Commande En pré-requis, il sera nécessaire de générer un Github personal access tocken (&amp;ndash;&amp;gt; Settings &amp;ndash;&amp;gt; Developer settings &amp;ndash;&amp;gt; Personal access tokens)
export MON_REPO_GIT=oeeckhoutte/mon-package export PACKAGE_NAME=mon-package export PACKAGE_VERSION=0.0.1 export JAR_FILENAME=mon-package-0.</description>
    </item>
    
  </channel>
</rss>
