<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dev on Lean Deep Tech blog</title>
    <link>https://leandeep.com/tags/dev/</link>
    <description>Recent content in Dev on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 07 Sep 2021 08:08:00 +0000</lastBuildDate><atom:link href="https://leandeep.com/tags/dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Switcher de Truffle Ganache à Hardhat</title>
      <link>https://leandeep.com/switcher-de-truffle-ganache-%C3%A0-hardhat/</link>
      <pubDate>Tue, 07 Sep 2021 08:08:00 +0000</pubDate>
      
      <guid>https://leandeep.com/switcher-de-truffle-ganache-%C3%A0-hardhat/</guid>
      <description>Introduction Dans cet article nous allons voir comment utiliser Hardhat pour démarrer une blockchain locale (fork du réseau mainnet) et pour compiler et déployer son code Solidity. Nous verrons aussi comment avoir une explorer type etherscan local.
 Pré-requis  nvm Créer un compte ethernal sur https://app.tryethernal.com/ Compte alchemyapi (concurrent infura ou autre full node)   Installation nvm install v14.17.6 nvm use v14.17.6 nvm use default v14.17.6 npm install ethernal -g ethernal login npm install --save-dev hardhat npm i --save-dev hardhat-ethernal npm i --save-dev @nomiclabs/hardhat-waffle  Démarrer votre blockchain en local npx hardhat node --fork https://eth-mainnet.</description>
    </item>
    
    <item>
      <title>Pas assez de gaz pour développer sur Ethereum</title>
      <link>https://leandeep.com/pas-assez-de-gaz-pour-d%C3%A9velopper-sur-ethereum/</link>
      <pubDate>Mon, 06 Sep 2021 08:08:00 +0000</pubDate>
      
      <guid>https://leandeep.com/pas-assez-de-gaz-pour-d%C3%A9velopper-sur-ethereum/</guid>
      <description>Introduction Voici un tip pour éviter de devoir attendre 24h avant de pouvoir réclamer des Keth via les Faucets de Kovan. Sans cela, et lorsque vous avez brulé tout votre capital à force de tester sans cesse votre code, c&amp;rsquo;est très compliqué d&amp;rsquo;avancer et d&amp;rsquo;achever le développement de son smart contract Solidity (ou dApps web3). On perd du temps alors qu&amp;rsquo;on n&amp;rsquo;est même pas en prod&amp;hellip;
Ce tip permet de s&amp;rsquo;affranchir temporairement de l&amp;rsquo;erreur suivante: {&#39;code&#39;: -32010, &#39;message&#39;: &#39;Insufficient funds.</description>
    </item>
    
    <item>
      <title>Utilitaires utiles OSX Catalina</title>
      <link>https://leandeep.com/utilitaires-utiles-osx-catalina/</link>
      <pubDate>Mon, 18 Nov 2019 11:08:00 +0000</pubDate>
      
      <guid>https://leandeep.com/utilitaires-utiles-osx-catalina/</guid>
      <description>Voici certains (le minimum vital) utilitaires de développement que j&amp;rsquo;utilise sur Mac.
Oh-my-zsh
sh -c &amp;quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&amp;quot;  Installer Node version manager (NVM)
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash Puis au moins les paquets suivants:
nvm install v12.13.0 nvm use v12.13.0 nvm alias default v12.13.0 npm i -g hexo http-server  Installer Blockchain tools
npm install -g truffle npm install -g ganache-cli  Installer Xcode CLI
xcode-select --install sudo xcodebuild -license accept  Homebrew</description>
    </item>
    
    <item>
      <title>Mettre en place un proxy transparent compatible SSL pour tracer toutes les requêtes</title>
      <link>https://leandeep.com/mettre-en-place-un-proxy-transparent-compatible-ssl-pour-tracer-toutes-les-requ%C3%AAtes/</link>
      <pubDate>Thu, 06 Dec 2018 22:22:00 +0000</pubDate>
      
      <guid>https://leandeep.com/mettre-en-place-un-proxy-transparent-compatible-ssl-pour-tracer-toutes-les-requ%C3%AAtes/</guid>
      <description>Introduction Dans cet article nous allons voir comment rapidement mettre en place un proxy transparent pour &amp;ldquo;logguer&amp;rdquo; tous les sites appelés par un device. C&amp;rsquo;est extrèmement pratique lorsqu&amp;rsquo;on fait du développement mobile lorsqu&amp;rsquo;on veut analyser les requêtes faites par notre application. (Je n&amp;rsquo;ai pas encore d&amp;rsquo;enfant mais cela pourrait permettrer de surveiller les sites sur lesquels ils vont :D&amp;hellip; Bref il y a beaucoup de use cases.
L&amp;rsquo;idée ici est de créer un hotspot Wifi.</description>
    </item>
    
  </channel>
</rss>
