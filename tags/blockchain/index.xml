<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blockchain on Lean Deep Tech blog</title>
    <link>https://leandeep.com/tags/blockchain/</link>
    <description>Recent content in Blockchain on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 18 Feb 2023 07:49:00 +0200</lastBuildDate><atom:link href="https://leandeep.com/tags/blockchain/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Switcher entre releases Erigon</title>
      <link>https://leandeep.com/switcher-entre-releases-erigon/</link>
      <pubDate>Sat, 18 Feb 2023 07:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/switcher-entre-releases-erigon/</guid>
      <description>J&amp;rsquo;ai déjà écrit plusieurs articles très similaires sur le sujet. Cette procédure décrit comment rapidement switcher de release Erigon pour tester une nouvelle feature ou vérifier qu&amp;rsquo;un fix fonctionne bien. En gros, cela me permet de switcher de release en release avec Erigon.
Voir l&amp;rsquo;article suivant pour une full installation.
Bien sûr commencer par un backup. Voir cet article
Erigon build mkdir /root/erigon_release_2_38_1/ cd /root/erigon_release_2_38_1/ git clone https://github.com/ledgerwatch/erigon.git cd erigon git checkout 52fd6d60e180a267e99a25662f169797570e356e make erigon make rpcdaemon Création du service</description>
    </item>
    
    <item>
      <title>Phases de synchronisation sur Erigon et liens sur l&#39;architecture</title>
      <link>https://leandeep.com/phases-de-synchronisation-sur-erigon-et-liens-sur-larchitecture/</link>
      <pubDate>Tue, 14 Feb 2023 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/phases-de-synchronisation-sur-erigon-et-liens-sur-larchitecture/</guid>
      <description>Steps de synchronisation sur Erigon var ( Snapshots SyncStage = &amp;#34;Snapshots&amp;#34; // Snapshots Headers SyncStage = &amp;#34;Headers&amp;#34; // Headers are downloaded, their Proof-Of-Work validity and chaining is verified CumulativeIndex SyncStage = &amp;#34;CumulativeIndex&amp;#34; // Calculate how much gas has been used up to each block. BlockHashes SyncStage = &amp;#34;BlockHashes&amp;#34; // Headers Number are written, fills blockHash =&amp;gt; number bucket Bodies SyncStage = &amp;#34;Bodies&amp;#34; // Block bodies are downloaded, TxHash and UncleHash are getting verified Senders SyncStage = &amp;#34;Senders&amp;#34; // &amp;#34;From&amp;#34; recovered from signatures, bodies re-written Execution SyncStage = &amp;#34;Execution&amp;#34; // Executing each block w/o buildinf a trie Translation SyncStage = &amp;#34;Translation&amp;#34; // Translation each marked for translation contract (from EVM to TEVM) VerkleTrie SyncStage = &amp;#34;VerkleTrie&amp;#34; IntermediateHashes SyncStage = &amp;#34;IntermediateHashes&amp;#34; // Generate intermediate hashes, calculate the state root hash HashState SyncStage = &amp;#34;HashState&amp;#34; // Apply Keccak256 to all the keys in the state AccountHistoryIndex SyncStage = &amp;#34;AccountHistoryIndex&amp;#34; // Generating history index for accounts StorageHistoryIndex SyncStage = &amp;#34;StorageHistoryIndex&amp;#34; // Generating history index for storage LogIndex SyncStage = &amp;#34;LogIndex&amp;#34; // Generating logs index (from receipts) CallTraces SyncStage = &amp;#34;CallTraces&amp;#34; // Generating call traces index TxLookup SyncStage = &amp;#34;TxLookup&amp;#34; // Generating transactions lookup index Finish SyncStage = &amp;#34;Finish&amp;#34; // Nominal stage after all other stages MiningCreateBlock SyncStage = &amp;#34;MiningCreateBlock&amp;#34; MiningExecution SyncStage = &amp;#34;MiningExecution&amp;#34; MiningFinish SyncStage = &amp;#34;MiningFinish&amp;#34; // Beacon chain stages BeaconHistoryReconstruction SyncStage = &amp;#34;BeaconHistoryReconstruction&amp;#34; // BeaconHistoryReconstruction reconstruct missing history.</description>
    </item>
    
    <item>
      <title>Backuper la DB d&#39;Erigon sur Debian 11</title>
      <link>https://leandeep.com/backuper-la-db-derigon-sur-debian-11/</link>
      <pubDate>Fri, 03 Feb 2023 07:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/backuper-la-db-derigon-sur-debian-11/</guid>
      <description>Pour backuper les data de votre Node Erigon, rien de tel qu&amp;rsquo;un disque externe. Après minimum une semaine de synchronisation rien de tel qu&amp;rsquo;un petit backup si vous devez restaurer votre système. Dans mon cas, je dois passer d&amp;rsquo;Erigon 2.36 à une version 2.37 forkée avec un dev perso permettant d&amp;rsquo;ajouter un endpoint RPC non disponible dans l&amp;rsquo;API de base. Comme je ne suis pas certain que mon dev est 100% safe car c&amp;rsquo;est mon premier développement sur un client Ethereum, je préfère faire un backup de ma DB.</description>
    </item>
    
    <item>
      <title>Erigon full node sur Debian 11</title>
      <link>https://leandeep.com/erigon-full-node-sur-debian-11/</link>
      <pubDate>Fri, 27 Jan 2023 07:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/erigon-full-node-sur-debian-11/</guid>
      <description>Installation des pré-requis Installation de go
wget https://dl.google.com/go/go1.19.5.linux-amd64.tar.gz tar -C /usr/local -xzf go1.19.5.linux-amd64.tar.gz Editer /root/bashrc et ajouter les commandes suivantes
export PATH=$PATH:/usr/local/go/bin export GOPATH=&amp;#34;${HOME}/.go/bin&amp;#34; export PATH=$GOPATH:$PATH Autres outils et consensus mechanism
# Prevent Debian sleep or hibernation systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target apt vim curl install git make supervisor build-essential software-properties-common net-tools jq mkdir -p ethereum/consensus/prysm cd $_ curl https://raw.githubusercontent.com/prysmaticlabs/prysm/master/prysm.sh --output prysm.sh &amp;amp;&amp;amp; chmod +x prysm.sh Ouvrir le fichier /root/.</description>
    </item>
    
    <item>
      <title>Noeud RPC Ethereum après The Merge sur Ubuntu 22.04</title>
      <link>https://leandeep.com/noeud-rpc-ethereum-apr%C3%A8s-the-merge-sur-ubuntu-22.04/</link>
      <pubDate>Thu, 15 Sep 2022 04:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/noeud-rpc-ethereum-apr%C3%A8s-the-merge-sur-ubuntu-22.04/</guid>
      <description>Introduction Dans cet article, nous allons voir comment hoster un noeud relais pour Ethereum mainnet après The Merge avec Nethermind sur Ubuntu 22.04.
Cette procédure a été écrite très rapidement quelques heures après la release de The Merge pour remettre d&amp;rsquo;aplomb mes bots de trading. Désolé d&amp;rsquo;avance si des erreurs se sont glissées dans cet article.
Installation On télécharge Nethermind:
mkdir -p /data/eth2-mainnet/{consensus,execution} cd /data/eth2-mainnet/execution wget https://github.com/NethermindEth/nethermind/archive/refs/tags/1.13.6.zip unzip 1.13.6.zip On installe le client pour le consensus POS:</description>
    </item>
    
    <item>
      <title>Noeud Ethereum Nethermind sur Ubuntu 22.04</title>
      <link>https://leandeep.com/noeud-ethereum-nethermind-sur-ubuntu-22.04/</link>
      <pubDate>Sun, 14 Aug 2022 23:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/noeud-ethereum-nethermind-sur-ubuntu-22.04/</guid>
      <description>Introduction Dans cet article, nous allons voir comment hoster un noeud light Ethereum mainnet avec Nethermind sur Ubuntu 22.04.
Installation On commence par installer .NET:
sudo add-apt-repository ppa:nethermindeth/nethermind sudo apt install nethermind Ensuite on installer Nethermind:
sudo add-apt-repository ppa:nethermindeth/nethermind sudo apt install nethermind Configuration On créer un répertoire qui contiendra nos data:
mkdir -p /data/eth-mainnet-nethermind On édite le fichier de configuration /usr/share/nethermind/configs/mainnet.cfg et on autorise les IPs, modules qui nous intéressent.</description>
    </item>
    
    <item>
      <title>Autres Blockchains et RPC nodes</title>
      <link>https://leandeep.com/autres-blockchains-et-rpc-nodes/</link>
      <pubDate>Fri, 15 Jul 2022 09:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/autres-blockchains-et-rpc-nodes/</guid>
      <description>Algorand Aurora Cronos KuCoin Near IoTeX Tezos Theta (soon) TomoChain Algorand Providers
Pocket Network - https://mainnet.portal.pokt.network Quicknode - https://www.quicknode.com/ Own node
https://developer.algorand.org/docs/run-a-node/setup/install/ Aurora Providers
Infura - https://infura.io Public Endpoints
https://mainnet.aurora.dev Own node
https://doc.aurora.dev/#running-your-own-aurora-node Cronos Public Endpoints
https://rpc.artemisone.org/cronos https://evm.cronos.org/ https://rpc.vvs.finance/ https://rpc.crodex.app/ https://mmf-rpc.xstaking.sg https://gateway.nebkas.ro/ Chain Id 25
Currency CRO
Explorer
https://cronos.org/explorer/ KuCoin Public Endpoints
https://rpc-mainnet.kcc.network/ Own node
https://docs.kcc.io/#/en-us/?id=node Near Providers
ANKR - https://ankr.com Infura - https://infura.io Public Endpoints
https://rpc.ankr.com/near https://near.public-rpc.com Own node</description>
    </item>
    
    <item>
      <title>Utiliser Erigon pour ses Nodes sur Ubuntu 20.04</title>
      <link>https://leandeep.com/utiliser-erigon-pour-ses-nodes-sur-ubuntu-20.04/</link>
      <pubDate>Tue, 12 Jul 2022 21:03:00 +0000</pubDate>
      
      <guid>https://leandeep.com/utiliser-erigon-pour-ses-nodes-sur-ubuntu-20.04/</guid>
      <description>Installation Go wget https://dl.google.com/go/go1.18.linux-amd64.tar.gz sudo tar -C /usr/local -xzf go1.18.linux-amd64.tar.gz Editer ~/.profile et ajouter les commandes suivantes
export PATH=$PATH:/usr/local/go/bin export GOPATH=&amp;#34;${HOME}/.go/bin&amp;#34; export PATH=$GOPATH:$PATH source ~/.profile go version Installation Erigon cd /data/ git clone --recurse-submodules -j8 https://github.com/ledgerwatch/erigon.git cd erigon make erigon Run Polygon
mkdir /data/bor-mainnet ./build/bin/erigon --datadir=&amp;#34;/data/bor-mainnet&amp;#34; --chain=bor-mainnet --port=30303 --http.port=8545 --torrent.port=42069 --private.api.addr=127.0.0.1:9090 --http --ws --http.api=eth,debug,net,trace,web3,erigon BSC
Archive Node:
mkdir /data/bsc ./build/bin/erigon --datadir=&amp;#34;/data/bsc&amp;#34; --chain=bsc --port=30303 --http.port=8545 --torrent.port=42069 --private.api.addr=127.0.0.1:9090 --http --ws --http.api=eth,debug,net,trace,web3,erigon Pruned Node:</description>
    </item>
    
    <item>
      <title>Blockchains et RPC nodes pour mes robots de trading</title>
      <link>https://leandeep.com/blockchains-et-rpc-nodes-pour-mes-robots-de-trading/</link>
      <pubDate>Sun, 03 Jul 2022 21:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/blockchains-et-rpc-nodes-pour-mes-robots-de-trading/</guid>
      <description>Voici des informations de base sur les blockchains sur lesquels sont connectés mes robots de trading.
Arbitrum Avalanche BNB Smart Chain (BSC) Celo Ethereum Fantom Fuse Gnosis (xDAI) Harmony (Mainnet Shard 0) Moonriver Optimism Polygon Solana Arbitrum Providers
Alchemy - https://www.alchemy.com ANKR - https://ankr.com Moralis - https://moralis.io QuickNode - https://www.quicknode.com/ Infura - https://infura.io Public Endpoints
https://arb1.arbitrum.io/rpc https://arbitrum.public-rpc.com https://rpc.ankr.com/arbitrum Chain Id 42161
Currency ETH
Explorer
https://arbiscan.io/ https://explorer.arbitrum.io/ Avalanche (C-Chain) Providers
AllNodes - https://www.</description>
    </item>
    
    <item>
      <title>Exemples de DEX que j&#39;utilise dans mes robots de trading</title>
      <link>https://leandeep.com/exemples-de-dex-que-jutilise-dans-mes-robots-de-trading/</link>
      <pubDate>Sun, 03 Jul 2022 21:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/exemples-de-dex-que-jutilise-dans-mes-robots-de-trading/</guid>
      <description>Voici quelques exemples de DEXes sur lesquels mes robots de trading sont connectés ainsi que quelques informations de base les concernants. J&amp;rsquo;ai pris l&amp;rsquo;exemple des 2 Blockchains les plus utilisées après Ethereum à savoir BNB Smart Chain (BSC) et Polygon.
Pour le moment, et jusqu&amp;rsquo;à ce qu&amp;rsquo;on passe en version 2, je n&amp;rsquo;utilise plus Ethereum à cause de gas fees qui rendent les trades moins intéressants.
Bien sûr il y en a plein d&amp;rsquo;autres et sur des tas de blockchains différentes.</description>
    </item>
    
  </channel>
</rss>
