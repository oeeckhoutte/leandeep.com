<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Lean Deep Tech blog</title>
    <link>https://leandeep.com/tags/python/</link>
    <description>Recent content in Python on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 11 Jan 2025 23:32:00 +0200</lastBuildDate><atom:link href="https://leandeep.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Surveiller et redémarrer un script Python dès qu&#39;un fichier est modifié</title>
      <link>https://leandeep.com/surveiller-et-red%C3%A9marrer-un-script-python-d%C3%A8s-quun-fichier-est-modifi%C3%A9/</link>
      <pubDate>Sat, 11 Jan 2025 23:32:00 +0200</pubDate>
      
      <guid>https://leandeep.com/surveiller-et-red%C3%A9marrer-un-script-python-d%C3%A8s-quun-fichier-est-modifi%C3%A9/</guid>
      <description>On peut utiliser watchdog pour surveiller les modifications des fichiers et relancer automatiquement un module/script lorsque des modifications sont détectées. Voici un exemple complet:
Pré-requis
pip install watchdog
Créer un script de surveillance
Créer par exemple un fichier appelé run_and_reload.py
import os import subprocess import sys from watchdog.observers import Observer from watchdog.events import FileSystemEventHandler class RestartOnChangeHandler(FileSystemEventHandler): def __init__(self, run_command): super().__init__() self.run_command = run_command self.process = None self.start_process() def start_process(self): if self.</description>
    </item>
    
    <item>
      <title>Simuler un mode offline pour certains tests Pytest</title>
      <link>https://leandeep.com/simuler-un-mode-offline-pour-certains-tests-pytest/</link>
      <pubDate>Tue, 10 Dec 2024 23:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/simuler-un-mode-offline-pour-certains-tests-pytest/</guid>
      <description>Pour certains, cet article peut sembler inutile car ils vous diront qu&amp;rsquo;il suffit de couper le wifi sur son laptop pour ne plus avoir internet. Ce n&amp;rsquo;est pas faux, mais parfois et sans rentrer dans le détail, il n&amp;rsquo;est pas toujours possible de travailler offline pendant des heures.
Voici donc un tip pour simuler dans des tests unitaires la déconnexion d&amp;rsquo;internet. Il suffit de créer la fixture pytest suivante et de l&amp;rsquo;appeler dans vos tests.</description>
    </item>
    
    <item>
      <title>Backtester ses stratégies de trading avec Backtrader</title>
      <link>https://leandeep.com/backtester-ses-strat%C3%A9gies-de-trading-avec-backtrader/</link>
      <pubDate>Fri, 02 Feb 2024 18:10:00 +0000</pubDate>
      
      <guid>https://leandeep.com/backtester-ses-strat%C3%A9gies-de-trading-avec-backtrader/</guid>
      <description>Voici un exemple de code Python permettant de backtester une stratégie (ici j&amp;rsquo;en ai créé une complètement inutile mais cela permet d&amp;rsquo;illustrer mon propose).
Pré-requis
pip install Pyarrow==15.0.0 pandas==2.2.0 backtrader==1.9.78.123 matplotlib==3.8.2 import math import pandas as pd import backtrader as bt import ccxt # Charger les données historiques depuis Binance exchange = ccxt.binance( { &amp;#34;apiKey&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;secret&amp;#34;: &amp;#34;&amp;#34;, } ) symbol = &amp;#34;ETH/USDT&amp;#34; timeframe = &amp;#34;1h&amp;#34; ohlcv = exchange.fetch_ohlcv(symbol, timeframe) df = pd.</description>
    </item>
    
    <item>
      <title>Setup local development environments with direnv and poetry</title>
      <link>https://leandeep.com/setup-local-development-environments-with-direnv-and-poetry/</link>
      <pubDate>Tue, 02 Jan 2024 23:43:00 +0000</pubDate>
      
      <guid>https://leandeep.com/setup-local-development-environments-with-direnv-and-poetry/</guid>
      <description>In this short article we are going to configure direnv to be able to use poetry smoothly.
Poetry installation Option 1 brew install pipx pipx ensurepath pipx install poetry Option 2 (The option I prefer) If you have pyenv and zsh:
Select the Python version you want to use:
# for example pyenv global 3.11.2 Then add the following line in your ~/.zshrc file:
eval &amp;#34;$(pyenv init --path)&amp;#34; Finally install poetry with a simple pip install poetry</description>
    </item>
    
    <item>
      <title>Utiliser une IP fixe dans son terminal via proxy socks</title>
      <link>https://leandeep.com/utiliser-une-ip-fixe-dans-son-terminal-via-proxy-socks/</link>
      <pubDate>Tue, 05 Sep 2023 23:46:00 +0200</pubDate>
      
      <guid>https://leandeep.com/utiliser-une-ip-fixe-dans-son-terminal-via-proxy-socks/</guid>
      <description>Voici un tip pour utiliser une IP fixe depuis son terminal quand son FAI ne fournit pas d&amp;rsquo;adresse IP statique. C&amp;rsquo;est le cas par exemple avec Starlink, SFR ou Orange&amp;hellip;
Pour ce faire, il suffit d&amp;rsquo;utiliser un proxy socks. Si vous avez une VM sur le cloud accessible directement via SSH, vous pouvez utiliser les commandes suivantes:
Dans un premier onglet de votre terminal exécuter la commande suivante:
ssh -D 6006 -q -C -N user@ip_or_reverse_dns Puis dans un second onglet:</description>
    </item>
    
    <item>
      <title>Fixer l&#39;erreur &#39;ModuleNotFoundError: No module named _lzma&#39; sur OSX</title>
      <link>https://leandeep.com/fixer-lerreur-modulenotfounderror-no-module-named-_lzma-sur-osx/</link>
      <pubDate>Mon, 21 Aug 2023 23:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/fixer-lerreur-modulenotfounderror-no-module-named-_lzma-sur-osx/</guid>
      <description>Voici un tip pour fixer l&amp;rsquo;erreur ennuyeuse ModuleNotFoundError: No module named &#39;_lzma&#39; sur OSX lorsqu&amp;rsquo;on utilise torch et pyenv.
Installer les packages suivants:
brew install zlib brew install sqlite brew install bzip2 brew install libiconv brew install libzip Ouvrir le fichier ~/.zshrc et ajouter les lignes suivantes:
export LDFLAGS=&amp;#34;${LDFLAGS} -L/usr/local/opt/zlib/lib&amp;#34; export CPPFLAGS=&amp;#34;${CPPFLAGS} -I/usr/local/opt/zlib/include&amp;#34; export LDFLAGS=&amp;#34;${LDFLAGS} -L/usr/local/opt/sqlite/lib&amp;#34; export CPPFLAGS=&amp;#34;${CPPFLAGS} -I/usr/local/opt/sqlite/include&amp;#34; export PKG_CONFIG_PATH=&amp;#34;${PKG_CONFIG_PATH} /usr/local/opt/zlib/lib/pkgconfig&amp;#34; export PKG_CONFIG_PATH=&amp;#34;${PKG_CONFIG_PATH} /usr/local/opt/sqlite/lib/pkgconfig&amp;#34; Installer une nouvelle version de Python via pyenv.</description>
    </item>
    
    <item>
      <title>direnv avec pyenv et anaconda</title>
      <link>https://leandeep.com/direnv-avec-pyenv-et-anaconda/</link>
      <pubDate>Mon, 21 Aug 2023 21:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/direnv-avec-pyenv-et-anaconda/</guid>
      <description>Dans cet article nous allons voir comment installer Anaconda3 sur OSX et l&amp;rsquo;utiliser directement dans direnv.
Pré-requis direnv installé Installation On commence par installer Anaconda via brew
brew install --cask anaconda On édite ~/.zshrc et on ajoute le path vers les binaires d&amp;rsquo;Anaconda.
export PATH=&amp;#34;/opt/homebrew/anaconda3/bin:$PATH&amp;#34; Nouvel environnement anaconda Si votre projet contient un fichier environment.yml, les packages s&amp;rsquo;installeront automatiquement lors de la première exécution du direnv allow.
Créer un fichier .</description>
    </item>
    
    <item>
      <title>Installer un serveur Sentry en moins de 5 minutes en 2022</title>
      <link>https://leandeep.com/installer-un-serveur-sentry-en-moins-de-5-minutes-en-2022/</link>
      <pubDate>Sat, 14 May 2022 21:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/installer-un-serveur-sentry-en-moins-de-5-minutes-en-2022/</guid>
      <description>Dans cet article nous allons voir comment installer Sentry sur OSX via Docker. Il fait suite à un premier article sur le même sujet écrit en 2018. La procédure a totalement changé donc voici une mise à jour.
Installation Installer le package suivant:
brew install coreutils Récupérer la dernière release de Sentry sur ce lien.
Dans mon cas, j&amp;rsquo;ai téléchargé la version self-hosted-22.5.0
Ensuite, il suffit d&amp;rsquo;exécuter les commandes suivantes:</description>
    </item>
    
    <item>
      <title>Mettre en place un Sonarqube et scanner son projet en moins de 5 minutes (v2)</title>
      <link>https://leandeep.com/mettre-en-place-un-sonarqube-et-scanner-son-projet-en-moins-de-5-minutes-v2/</link>
      <pubDate>Fri, 10 Dec 2021 06:56:00 +0000</pubDate>
      
      <guid>https://leandeep.com/mettre-en-place-un-sonarqube-et-scanner-son-projet-en-moins-de-5-minutes-v2/</guid>
      <description>Introduction Voici les étapes à suivre pour ajouter un sonar dans son projet. Il s&amp;rsquo;agit d&amp;rsquo;une mise à jour de l&amp;rsquo;article suivant qui n&amp;rsquo;est plus forcément à jour car le projet Sonar a évolué positivement.
Steps Déployer un sonar via Docker $ docker pull sonarqube $ docker run -d --name sonarqube -p 9000:9000 -p 9092:9092 sonarqube Installer sonar scanner cli brew install sonar-scanner Note: Mot de passe par défault: admin/admin</description>
    </item>
    
    <item>
      <title>Architecture applicative d&#39;une application AR Copy Paste</title>
      <link>https://leandeep.com/architecture-applicative-dune-application-ar-copy-paste/</link>
      <pubDate>Wed, 29 Sep 2021 06:47:00 +0200</pubDate>
      
      <guid>https://leandeep.com/architecture-applicative-dune-application-ar-copy-paste/</guid>
      <description>Introduction Peut-être êtes-vous tombé sur cette vidéo qui a fait le buzz sur Linkedin où l&amp;rsquo;on voyait une app mobile prendre une photo de n&amp;rsquo;importe quel objet, le détourait automatiquement et l&amp;rsquo;envoyait sur Photoshop. Le concept est appelé &amp;ldquo;AR Copy Paste&amp;rdquo;. Voici un article dédié au concept
J&amp;rsquo;ai été très impressionné par la démo et me suis demandé comment c&amp;rsquo;était fait. J&amp;rsquo;ai donc codé un MVP qui refait exactement la même chose (au delta près du plugin Photoshop qui n&amp;rsquo;est qu&amp;rsquo;un wrapper autour de mon app web qui affichait déjà mon image détourée).</description>
    </item>
    
  </channel>
</rss>
