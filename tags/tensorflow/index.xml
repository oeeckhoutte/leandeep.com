<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tensorflow on Lean Deep Tech blog</title>
    <link>https://leandeep.com/tags/tensorflow/</link>
    <description>Recent content in Tensorflow on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 15 Nov 2020 12:19:00 +0000</lastBuildDate><atom:link href="https://leandeep.com/tags/tensorflow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Installer Tensorflow 2 avec GPU backend avec un eGPU, Kubuntu 20.04 et Docker</title>
      <link>https://leandeep.com/installer-tensorflow-2-avec-gpu-backend-avec-un-egpu-kubuntu-20.04-et-docker/</link>
      <pubDate>Sun, 15 Nov 2020 12:19:00 +0000</pubDate>
      
      <guid>https://leandeep.com/installer-tensorflow-2-avec-gpu-backend-avec-un-egpu-kubuntu-20.04-et-docker/</guid>
      <description>Dans deux articles précédents, nous avions vu comment installer Tensorflow 1 et 2 avec GPU support sur Ubuntu 18.04 avec une carte graphique Gefore GTX 1080 ou une plus ancienne carte plus supportée, la Geforce GTX 660 Ti.
J&amp;rsquo;ai récemment fait un système upgrade et suis passé sur Kubuntu 20.04. Il est excellant et très stable, je le recommande grandement. Je suis toujours partisan des stations de Deep Learning personnelles (non dans le Cloud).</description>
    </item>
    
    <item>
      <title>Installer un eGPU sur un Intel Nuc avec Ubuntu 18.04</title>
      <link>https://leandeep.com/installer-un-egpu-sur-un-intel-nuc-avec-ubuntu-18.04/</link>
      <pubDate>Thu, 18 Jul 2019 12:19:00 +0000</pubDate>
      
      <guid>https://leandeep.com/installer-un-egpu-sur-un-intel-nuc-avec-ubuntu-18.04/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://leandeep.com/images/IMG_35783.JPG&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rendre Tensorflow compatible avec plus de cartes graphiques</title>
      <link>https://leandeep.com/rendre-tensorflow-compatible-avec-plus-de-cartes-graphiques/</link>
      <pubDate>Sat, 29 Sep 2018 19:50:00 +0000</pubDate>
      
      <guid>https://leandeep.com/rendre-tensorflow-compatible-avec-plus-de-cartes-graphiques/</guid>
      <description>Installer les dépendances Installer openjdk 8:
sudo apt-get install openjdk-8-jdk Installer les autres dépendances:
sudo apt-get install pkg-config zip g++ zlib1g-dev unzip Installer Bazel wget https://github.com/bazelbuild/bazel/releases/download/0.17.2/bazel-0.17.2-installer-linux-x86_64.sh chmod +x bazel-0.17.2-installer-linux-x86_64.sh ./bazel-0.17.2-installer-linux-x86_64.sh --user Pour pouvoir utiliser Bazel, modifier votre .bashrc ou .zshrc et ajouter cette commande:
export PATH=&amp;#34;$PATH:$HOME/bin&amp;#34; Install libcudnn Télécharger le binaire directement depuis le site: https://developer.nvidia.com/cudnn. Cette étape nécessite de créer une compte chez Nvidia.
Pour installer le binaire il suffit d&amp;rsquo;exécuter la commande suivante:</description>
    </item>
    
  </channel>
</rss>
