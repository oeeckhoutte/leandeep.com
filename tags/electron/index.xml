<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Electron on Lean Deep Tech blog</title>
    <link>https://leandeep.com/tags/electron/</link>
    <description>Recent content in Electron on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 12 Nov 2020 22:49:00 +0200</lastBuildDate><atom:link href="https://leandeep.com/tags/electron/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Analyser le code source d&#39;une app ElectronJS</title>
      <link>https://leandeep.com/analyser-le-code-source-dune-app-electronjs/</link>
      <pubDate>Thu, 12 Nov 2020 22:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/analyser-le-code-source-dune-app-electronjs/</guid>
      <description>Introduction Parfois pour vérifier qu&amp;rsquo;une application dénichée sur internet (et pas sur les stores officiels Google ou Apple) ne comporte pas de virus, le plus simple est d&amp;rsquo;analyser son code source. C&amp;rsquo;était mon cas pour une application utilisant le framework ElectronJS que je trouvais géniale. J&amp;rsquo;ai voulu vérifier qu&amp;rsquo;elle ne contenait pas de faille de sécurité avant de l&amp;rsquo;installer sur mon Mac. Les applications ElectronJS sont &amp;ldquo;protégées&amp;rdquo; par une archive et le code est offusqué.</description>
    </item>
    
  </channel>
</rss>
