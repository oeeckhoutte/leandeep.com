<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VSCode on Bienvenue sur le site de Lean Deep</title>
    <link>https://leandeep.com/tags/vscode/</link>
    <description>Recent content in VSCode on Bienvenue sur le site de Lean Deep</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 22 May 2019 18:19:00 +0000</lastBuildDate>
    
	<atom:link href="https://leandeep.com/tags/vscode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>VSCode et les pipenv</title>
      <link>https://leandeep.com/vscode-et-les-pipenv/</link>
      <pubDate>Wed, 22 May 2019 18:19:00 +0000</pubDate>
      
      <guid>https://leandeep.com/vscode-et-les-pipenv/</guid>
      <description>Introduction Pipenv est un super utilitaire pour pouvoir gérer facilement les dépendances de ses projets avec des environnements virtuels. C&#39;est l&#39;équivalent de npm en NodeJS. Il est un peu plus avancé que les virtualenv.
Voici comment utiliser pipenv avec Visual Studio Code.
Virtual environment création &amp;amp; pipenv installation Imaginez que vous cloniez un projet qui contient un fichier Pipfile. La première chose à faire est d&#39;excuter la commande pipenv install --dev --python version_installee_par_pyenv.</description>
    </item>
    
    <item>
      <title>Charger un fichier .env composé de clés/valeurs pour VSCode dans le terminal</title>
      <link>https://leandeep.com/charger-un-fichier-.env-compos%C3%A9-de-cl%C3%A9s/valeurs-pour-vscode-dans-le-terminal/</link>
      <pubDate>Thu, 02 Jul 2015 22:23:00 +0000</pubDate>
      
      <guid>https://leandeep.com/charger-un-fichier-.env-compos%C3%A9-de-cl%C3%A9s/valeurs-pour-vscode-dans-le-terminal/</guid>
      <description>Travailler avec des fichiers .env est très utile en développement.
L&#39;exemple le plus courant pourrait ressembler à ceci:
export SERVER_URL=&#39;blablabla&#39; ... Il suffit de sourcer ce fichier et tout l&#39;environnement d&#39;exécution est configuré avec les bonnes variables.
Par contre, ce pose problème avec des outils comme VSCode. Les mots clés comme export ne sont pas compatibles. VSCode attend en effet uniquement des fichiers composés de clés/ valeurs.
Par exemple, la configuration VScode .</description>
    </item>
    
  </channel>
</rss>