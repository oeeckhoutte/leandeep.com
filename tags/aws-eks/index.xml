<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS EKS on Bienvenue sur le site de Lean Deep</title>
    <link>https://leandeep.com/tags/aws-eks/</link>
    <description>Recent content in AWS EKS on Bienvenue sur le site de Lean Deep</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 08 Mar 2019 17:08:00 +0000</lastBuildDate><atom:link href="https://leandeep.com/tags/aws-eks/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Commandes utiles Kubernetes</title>
      <link>https://leandeep.com/commandes-utiles-kubernetes/</link>
      <pubDate>Fri, 08 Mar 2019 17:08:00 +0000</pubDate>
      
      <guid>https://leandeep.com/commandes-utiles-kubernetes/</guid>
      <description>Commandes propres à Kubernetes Créer un namespace
kubectl create ns &amp;lt;new-namespace&amp;gt;  Savoir si une ressource appartient à un namespace
kubectl api-resources --namespaced=true  Savoir si une ressource appartient PAS à un namespace
kubectl api-resources --namespaced=false  Switcher de namespace
# Install kubens with the following command: # Sur Mac: brew install kubectx # Sur Linux (les 3 commandes qui suivent): # sudo git clone https://github.com/ahmetb/kubectx /opt/kubectx # sudo ln -s /opt/kubectx/kubectx /usr/local/bin/kubectx # sudo ln -s /opt/kubectx/kubens /usr/local/bin/kubens kubens &amp;lt;namespace&amp;gt; # Enregistre de manière permanente le namespace pour toutes les commandes kubectl suivantes dans ce contexte kubectl config set-context --current --namespace=NOM_DU_NAMESPACE  Connaître le cluster dans lequel on se situe</description>
    </item>
    
    <item>
      <title>Provisionner un cluster Kubernetes avec AWS EKS</title>
      <link>https://leandeep.com/provisionner-un-cluster-kubernetes-avec-aws-eks/</link>
      <pubDate>Thu, 07 Mar 2019 21:28:00 +0000</pubDate>
      
      <guid>https://leandeep.com/provisionner-un-cluster-kubernetes-avec-aws-eks/</guid>
      <description>Introduction Dans cet article nous allons voir comment provisionner un cluster simple Kubernetes via AWS EKS. Nous verrons dans un prochain article comment mettre en place l&amp;rsquo;autoscaling et comment faire pour que les nouvelles instances automatiquement crées soient des instances Spot.
 Pré-requis  Compte AWS Utilisateur Admin (Policy AdministratorAccess dans IAM)   Installation via Cloud9  Créer un nouveau workspace dans Cloud9 &amp;lt;nom_de_votre_projet&amp;gt;   Depuis Cloud9, via le terminal générer une clé SSH  ssh-keygen  Uploader sa clé dans la région EC2  aws ec2 import-key-pair --key-name &amp;quot;&amp;lt;nom_de_votre_clé&amp;gt;&amp;quot; --public-key-material file://~/.</description>
    </item>
    
  </channel>
</rss>
