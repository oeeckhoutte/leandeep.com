<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on Bienvenue sur le site de Lean Deep</title>
    <link>https://leandeep.com/tags/kubernetes/</link>
    <description>Recent content in Kubernetes on Bienvenue sur le site de Lean Deep</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 19 Nov 2020 23:12:00 +0200</lastBuildDate><atom:link href="https://leandeep.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Installer un cluster Kubernetes sur baremetal avec metalLB et Rancher 2</title>
      <link>https://leandeep.com/installer-un-cluster-kubernetes-sur-baremetal-avec-metallb-et-rancher-2/</link>
      <pubDate>Thu, 19 Nov 2020 23:12:00 +0200</pubDate>
      
      <guid>https://leandeep.com/installer-un-cluster-kubernetes-sur-baremetal-avec-metallb-et-rancher-2/</guid>
      <description>Dans cet article, nous allons voir comment installer un cluster Kubernetes sur un ou plusieurs noeuds &amp;ldquo;physiques&amp;rdquo;. On est sur de l&amp;rsquo;auto-hébergement. MetalLB sera utilisé pour remplacer les load balancers des &amp;ldquo;clouders&amp;rdquo;. MetalLB est une implémentation de Load Balancer pour les clusters Kubernetes Bare Metal, utilisant des protocoles de routage standard. Rancher 2 sera également utilisé. On aurait pu utiliser kubeadm mais cette solution nous simplifie clairement la vie.
 Pré-requis  Docker   Lancer Rancher 2 via Docker sudo docker run -d --privileged --restart=unless-stopped -p 8443:443 rancher/rancher  Provisionner un cluster k8s Une fois le serveur Rancher démarré, connectez-vous en créant un compte admin puis créez un cluster Kubernetes.</description>
    </item>
    
    <item>
      <title>Forcer l&#39;effacement d&#39;un namespace Kubernetes</title>
      <link>https://leandeep.com/forcer-leffacement-dun-namespace-kubernetes/</link>
      <pubDate>Mon, 05 Oct 2020 19:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/forcer-leffacement-dun-namespace-kubernetes/</guid>
      <description>Introduction Parfois lorsqu&amp;rsquo;on tente d&amp;rsquo;effacer un namespace, il ne s&amp;rsquo;efface pas vraiment et reste dans l&amp;rsquo;état terminated. Si vous essayez d&amp;rsquo;exécuter la commande kubectl delete ns mon_namespace et que vous recevez un message comme ci-dessous, ce tutoriel est fait pour vous: Error from server (Conflict): Operation cannot be fulfilled on namespaces &amp;quot;mon_namespace&amp;quot;: The system is ensuring all content is removed from this namespace. Upon completion, this namespace will automatically be purged by the system.</description>
    </item>
    
    <item>
      <title>Lister les process Linux dans une image redhat ubi-minimal</title>
      <link>https://leandeep.com/lister-les-process-linux-dans-une-image-redhat-ubi-minimal/</link>
      <pubDate>Fri, 10 Jan 2020 19:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/lister-les-process-linux-dans-une-image-redhat-ubi-minimal/</guid>
      <description>ps n&amp;rsquo;est pas disponible dans les nouvelles images minimales Redhat ubi8-minimal. Voici un article de RedHat expliquant ce que sont ces images https://www.redhat.com/en/blog/introducing-red-hat-universal-base-image
Pour réaliser un ps aux, cela va être compliqué&amp;hellip;
2 options s&amp;rsquo;offrent à nous:
  Option 1: Soit On veut ajouter at vitam eternam le binaire ps dans son container/ ou pod.
  Option 2: Ou soit on veut ajouter ps une fois que le container ou pod a démarré (juste une fois).</description>
    </item>
    
    <item>
      <title>Installer Rancher 2 sur Centos 7 (Dev setup)</title>
      <link>https://leandeep.com/installer-rancher-2-sur-centos-7-dev-setup/</link>
      <pubDate>Sun, 05 May 2019 19:00:00 +0000</pubDate>
      
      <guid>https://leandeep.com/installer-rancher-2-sur-centos-7-dev-setup/</guid>
      <description>Please note that I do not recommend this setup for production. It is convenient for development/demo purposes.
 Docker installation Install needed packages:
sudo yum install -y yum-utils device-mapper-persistent-data lvm2 Configure the docker-ce repo:
sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo Install docker-ce:
sudo yum install docker-ce Create Docker group:
sudo groupadd docker It appeared that docker.sock was owned by root and in the group root:
ls -l /var/run/docker.sock srw-rw---- 1 root root 0 May 6 15:42 /var/run/docker.</description>
    </item>
    
    <item>
      <title>Commandes utiles Kubernetes</title>
      <link>https://leandeep.com/commandes-utiles-kubernetes/</link>
      <pubDate>Fri, 08 Mar 2019 17:08:00 +0000</pubDate>
      
      <guid>https://leandeep.com/commandes-utiles-kubernetes/</guid>
      <description>Commandes propres à Kubernetes Créer un namespace
kubectl create ns &amp;lt;new-namespace&amp;gt;  Savoir si une ressource appartient à un namespace
kubectl api-resources --namespaced=true  Savoir si une ressource appartient PAS à un namespace
kubectl api-resources --namespaced=false  Switcher de namespace
# Install kubens with the following command: # Sur Mac: brew install kubectx # Sur Linux (les 3 commandes qui suivent): # sudo git clone https://github.com/ahmetb/kubectx /opt/kubectx # sudo ln -s /opt/kubectx/kubectx /usr/local/bin/kubectx # sudo ln -s /opt/kubectx/kubens /usr/local/bin/kubens kubens &amp;lt;namespace&amp;gt; # Enregistre de manière permanente le namespace pour toutes les commandes kubectl suivantes dans ce contexte kubectl config set-context --current --namespace=NOM_DU_NAMESPACE  Connaître le cluster dans lequel on se situe</description>
    </item>
    
    <item>
      <title>Provisionner un cluster Kubernetes avec AWS EKS</title>
      <link>https://leandeep.com/provisionner-un-cluster-kubernetes-avec-aws-eks/</link>
      <pubDate>Thu, 07 Mar 2019 21:28:00 +0000</pubDate>
      
      <guid>https://leandeep.com/provisionner-un-cluster-kubernetes-avec-aws-eks/</guid>
      <description>Introduction Dans cet article nous allons voir comment provisionner un cluster simple Kubernetes via AWS EKS. Nous verrons dans un prochain article comment mettre en place l&amp;rsquo;autoscaling et comment faire pour que les nouvelles instances automatiquement crées soient des instances Spot.
 Pré-requis  Compte AWS Utilisateur Admin (Policy AdministratorAccess dans IAM)   Installation via Cloud9  Créer un nouveau workspace dans Cloud9 &amp;lt;nom_de_votre_projet&amp;gt;   Depuis Cloud9, via le terminal générer une clé SSH  ssh-keygen  Uploader sa clé dans la région EC2  aws ec2 import-key-pair --key-name &amp;quot;&amp;lt;nom_de_votre_clé&amp;gt;&amp;quot; --public-key-material file://~/.</description>
    </item>
    
    <item>
      <title>Comparaison des services de conteneurisation AWS (ECS, Fargate et EKS) </title>
      <link>https://leandeep.com/comparaison-des-services-de-conteneurisation-aws-ecs-fargate-et-eks/</link>
      <pubDate>Wed, 16 Jan 2019 19:33:00 +0000</pubDate>
      
      <guid>https://leandeep.com/comparaison-des-services-de-conteneurisation-aws-ecs-fargate-et-eks/</guid>
      <description>Il n&amp;rsquo;est pas évident de comprendre les différentes entre AWS ECS, Fargate et EKS. Au premier abord ces outils peuvent sembler similaire. Je me suis personnellement vraiment questionné sur la différence entre AWS Fargate et AWS EKS.
Dans cet article je vais essayer de résumer les différences qu&amp;rsquo;il peut y avoir entre ces 3 services.
 Avantages
   ECS EKS Fargate     Service gratuit (on ne paye que pour le compute sous jacent) Offre toutes les features d’ECS + VPC pour le réseau entre pods et isolation au niveau du cluster Kubernetes Possible d’utiliser l’API de Fargate comme celle d’ECS   Service historique d’AWS d’orchestration de containers Docker Offre tous les avantages de Kubernetes (cloud agnostic) Permet de faire tourner des clusters hétérogènes constitués d’instance EC2 ou Fargate.</description>
    </item>
    
    <item>
      <title>Provisionner un cluster Kubernetes sur HCloud</title>
      <link>https://leandeep.com/provisionner-un-cluster-kubernetes-sur-hcloud/</link>
      <pubDate>Wed, 02 Jan 2019 00:45:00 +0000</pubDate>
      
      <guid>https://leandeep.com/provisionner-un-cluster-kubernetes-sur-hcloud/</guid>
      <description>Introduction Dans cet article nous allons voir comment provisionner un cluster avec ou sans haute disponibilité sur HCloud. Sans haute disponibilité, on va créer un cluster contenant 2 noeuds (1 master et 1 worker). C&amp;rsquo;est parfait quand on n&amp;rsquo;est pas en production.
 Pré-requis  Installer Go Installer le binaire Go disponible sur le repository https://github.com/xetys/hetzner-kube   Déploiement du cluster Créer un compte sur HCloud (entrez vos informations personnelles et surtout une CB)</description>
    </item>
    
    <item>
      <title>Fonctionnement interne de Kubernetes</title>
      <link>https://leandeep.com/fonctionnement-interne-de-kubernetes/</link>
      <pubDate>Sun, 16 Jul 2017 21:02:00 +0000</pubDate>
      
      <guid>https://leandeep.com/fonctionnement-interne-de-kubernetes/</guid>
      <description>Aujourd&amp;rsquo;hui, j&amp;rsquo;ai présenté Kubernetes à mes collègues et ai eu besoin de dessiner son architecture macro interne.
 Voici le Sketch réalisé en live durant la présentation:
 </description>
    </item>
    
  </channel>
</rss>
