<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Trading on Lean Deep Tech blog</title>
    <link>https://leandeep.com/tags/trading/</link>
    <description>Recent content in Trading on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 03 Jan 2023 07:00:00 +0200</lastBuildDate><atom:link href="https://leandeep.com/tags/trading/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cointégration vs Corrélation en Trading</title>
      <link>https://leandeep.com/coint%C3%A9gration-vs-corr%C3%A9lation-en-trading/</link>
      <pubDate>Tue, 03 Jan 2023 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/coint%C3%A9gration-vs-corr%C3%A9lation-en-trading/</guid>
      <description>Introduction Miser sur la corrélation entre différents assets pour faire du pair trading est une mauvaise idée. Il vaut mieux miser sur la cointégration.
Corrélation vs Cointégration La cointégration est une relation statistique entre deux variables qui évoluent de manière similaire à long terme. Cela signifie que si l&amp;rsquo;une des variables change, l&amp;rsquo;autre suivra également cette tendance sur une période de temps prolongée.
La corrélation, en revanche, mesure simplement la relation entre deux variables à un moment donné.</description>
    </item>
    
    <item>
      <title>Data Version Control pour vos projets data ou algo-trading</title>
      <link>https://leandeep.com/data-version-control-pour-vos-projets-data-ou-algo-trading/</link>
      <pubDate>Mon, 02 Jan 2023 12:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/data-version-control-pour-vos-projets-data-ou-algo-trading/</guid>
      <description>Introduction Dans cet article, nous allons voir comment versionner nos datasets et notre code. Les datasets ne seront pas stockés sur git car cet outil n&amp;rsquo;est pas fait pour stocker des fichiers volumineux. Il faut donc stocker les données ailleurs. Ici je vais les stocker sur Google Drive. DVC (Data Version Control) va permettre de versionner les data en créant une référence (un hash) qui sera stocké dans le commit git.</description>
    </item>
    
    <item>
      <title>Autres Blockchains et RPC nodes</title>
      <link>https://leandeep.com/autres-blockchains-et-rpc-nodes/</link>
      <pubDate>Fri, 15 Jul 2022 09:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/autres-blockchains-et-rpc-nodes/</guid>
      <description>Algorand Aurora Cronos KuCoin Near IoTeX Tezos Theta (soon) TomoChain Algorand Providers
Pocket Network - https://mainnet.portal.pokt.network Quicknode - https://www.quicknode.com/ Own node
https://developer.algorand.org/docs/run-a-node/setup/install/ Aurora Providers
Infura - https://infura.io Public Endpoints
https://mainnet.aurora.dev Own node
https://doc.aurora.dev/#running-your-own-aurora-node Cronos Public Endpoints
https://rpc.artemisone.org/cronos https://evm.cronos.org/ https://rpc.vvs.finance/ https://rpc.crodex.app/ https://mmf-rpc.xstaking.sg https://gateway.nebkas.ro/ Chain Id 25
Currency CRO
Explorer
https://cronos.org/explorer/ KuCoin Public Endpoints
https://rpc-mainnet.kcc.network/ Own node
https://docs.kcc.io/#/en-us/?id=node Near Providers
ANKR - https://ankr.com Infura - https://infura.io Public Endpoints
https://rpc.ankr.com/near https://near.public-rpc.com Own node</description>
    </item>
    
    <item>
      <title>Blockchains et RPC nodes pour mes robots de trading</title>
      <link>https://leandeep.com/blockchains-et-rpc-nodes-pour-mes-robots-de-trading/</link>
      <pubDate>Sun, 03 Jul 2022 21:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/blockchains-et-rpc-nodes-pour-mes-robots-de-trading/</guid>
      <description>Voici des informations de base sur les blockchains sur lesquels sont connectés mes robots de trading.
Arbitrum Avalanche BNB Smart Chain (BSC) Celo Ethereum Fantom Fuse Gnosis (xDAI) Harmony (Mainnet Shard 0) Moonriver Optimism Polygon Solana Arbitrum Providers
Alchemy - https://www.alchemy.com ANKR - https://ankr.com Moralis - https://moralis.io QuickNode - https://www.quicknode.com/ Infura - https://infura.io Public Endpoints
https://arb1.arbitrum.io/rpc https://arbitrum.public-rpc.com https://rpc.ankr.com/arbitrum Chain Id 42161
Currency ETH
Explorer
https://arbiscan.io/ https://explorer.arbitrum.io/ Avalanche (C-Chain) Providers
AllNodes - https://www.</description>
    </item>
    
    <item>
      <title>Exemples de DEX que j&#39;utilise dans mes robots de trading</title>
      <link>https://leandeep.com/exemples-de-dex-que-jutilise-dans-mes-robots-de-trading/</link>
      <pubDate>Sun, 03 Jul 2022 21:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/exemples-de-dex-que-jutilise-dans-mes-robots-de-trading/</guid>
      <description>Voici quelques exemples de DEXes sur lesquels mes robots de trading sont connectés ainsi que quelques informations de base les concernants. J&amp;rsquo;ai pris l&amp;rsquo;exemple des 2 Blockchains les plus utilisées après Ethereum à savoir BNB Smart Chain (BSC) et Polygon.
Pour le moment, et jusqu&amp;rsquo;à ce qu&amp;rsquo;on passe en version 2, je n&amp;rsquo;utilise plus Ethereum à cause de gas fees qui rendent les trades moins intéressants.
Bien sûr il y en a plein d&amp;rsquo;autres et sur des tas de blockchains différentes.</description>
    </item>
    
    <item>
      <title>Télécharger les ABIs des smart contracts vérifiés sur bscscan</title>
      <link>https://leandeep.com/t%C3%A9l%C3%A9charger-les-abis-des-smart-contracts-v%C3%A9rifi%C3%A9s-sur-bscscan/</link>
      <pubDate>Sun, 03 Jul 2022 21:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/t%C3%A9l%C3%A9charger-les-abis-des-smart-contracts-v%C3%A9rifi%C3%A9s-sur-bscscan/</guid>
      <description>Tout est dans le titre. Voici un script très simple permettant de télécharger les ABIs disponibles sur BSC Scan.
Créer un fichier get_abi.py et coller le contenu suivant:
#!/usr/bin/python import argparse import requests import json ABI_ENDPOINT = &amp;#34;https://api.etherscan.io/api?module=contract&amp;amp;action=getabi&amp;amp;address=&amp;#34; parser = argparse.ArgumentParser() parser.add_argument(&amp;#34;-a&amp;#34;, &amp;#34;--address&amp;#34;, type=str, help=&amp;#34;Smart contract address&amp;#34;) parser.add_argument(&amp;#34;-o&amp;#34;, &amp;#34;--output&amp;#34;, type=str, help=&amp;#34;Path to store the output ABI JSON file&amp;#34;, required=True) def __main__() -&amp;gt; None: &amp;#34;&amp;#34;&amp;#34;Exports contract ABI in JSON&amp;#34;&amp;#34;&amp;#34; args = parser.</description>
    </item>
    
    <item>
      <title>Afficher les spreads des produits dérivés dans Tradingview</title>
      <link>https://leandeep.com/afficher-les-spreads-des-produits-d%C3%A9riv%C3%A9s-dans-tradingview/</link>
      <pubDate>Wed, 24 Nov 2021 19:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/afficher-les-spreads-des-produits-d%C3%A9riv%C3%A9s-dans-tradingview/</guid>
      <description>Aujourd&amp;rsquo;hui j&amp;rsquo;écris mon premier article sur le trading. J&amp;rsquo;avais déjà écrit un article sur la finance en parlant d&amp;rsquo;un outil que j&amp;rsquo;avais construit pour suivre les mouvements des fonds d&amp;rsquo;investissement via le RPA (Robotic Process Automation) mais jamais sur le trading.
Nous allons voir comment afficher les spreads dans Tradingview en construisant son propre indicateur EMA (Exponential Moving Average) sur 13 périodes. Voici la démarche à suivre à travers cette vidéo.</description>
    </item>
    
  </channel>
</rss>
