<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tips on Lean Deep Tech blog</title>
    <link>https://leandeep.com/tags/tips/</link>
    <description>Recent content in tips on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 14 Jan 2023 07:00:00 +0200</lastBuildDate><atom:link href="https://leandeep.com/tags/tips/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Retourner un dataframe OHLCV des tickers Binance √† partir de CCTX</title>
      <link>https://leandeep.com/retourner-un-dataframe-ohlcv-des-tickers-binance-%C3%A0-partir-de-cctx/</link>
      <pubDate>Sat, 14 Jan 2023 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/retourner-un-dataframe-ohlcv-des-tickers-binance-%C3%A0-partir-de-cctx/</guid>
      <description>Petit tip du jour de minutes. Voici comment convertir les donn√©es OHLCV de Binance obtenues gr√¢ce √† CCTX en dataframe.
import ccxt import calendar from datetime import datetime import pandas as pd import numpy as np from typing import List binance = ccxt.binance() def min_ohlcv(dt: datetime, pair: str, limit: int) -&amp;gt; list: # UTC native object since = calendar.timegm(dt.utctimetuple()) * 1000 ohlcv1 = binance.fetch_ohlcv( symbol=pair, timeframe=&amp;#34;1m&amp;#34;, since=since, limit=limit ) ohlcv2 = binance.</description>
    </item>
    
    <item>
      <title>Terraform REPL</title>
      <link>https://leandeep.com/terraform-repl/</link>
      <pubDate>Mon, 09 Jan 2023 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/terraform-repl/</guid>
      <description>Dans cet article, nous allons voir comment tester son code Terraform fa√ßon REPL. L&amp;rsquo;id√©e c&amp;rsquo;est de pouvoir rapidement d√©gainer un REPL pour pouvoir tester la bonne syntaxe de son code lorsqu&amp;rsquo;on veut le faire √©voluer.
J&amp;rsquo;ai vu qu&amp;rsquo;il y avait des projets non officiel open source sur Github comme celui-ci avec apparemment un vrai REPL mais je n&amp;rsquo;ai pas eu le temps de l&amp;rsquo;analyser et de v√©rifier qu&amp;rsquo;il n&amp;rsquo;y avait pas de bug et surtout de faille de s√©curit√©.</description>
    </item>
    
    <item>
      <title>Ajouter un prefix sur les noms des fichiers d&#39;un r√©pertoire</title>
      <link>https://leandeep.com/ajouter-un-prefix-sur-les-noms-des-fichiers-dun-r%C3%A9pertoire/</link>
      <pubDate>Sat, 07 Jan 2023 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/ajouter-un-prefix-sur-les-noms-des-fichiers-dun-r%C3%A9pertoire/</guid>
      <description>Petit tip du jour de 5 secondes pour ajouter un prefix devant tous les fichiers d&amp;rsquo;un r√©pertoire:
for f in * ; do mv &amp;#34;$f&amp;#34; Prefix_&amp;#34;$f&amp;#34; ; done </description>
    </item>
    
    <item>
      <title>Enregistrer vos playlists Youtube en mp3 ou mp4</title>
      <link>https://leandeep.com/enregistrer-vos-playlists-youtube-en-mp3-ou-mp4/</link>
      <pubDate>Sat, 07 Jan 2023 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/enregistrer-vos-playlists-youtube-en-mp3-ou-mp4/</guid>
      <description>Petit tip du jour de 25 secondes: pour enregistrer automatiquement via cli vos playlists Youtube en MP3, il vous suffit d&amp;rsquo;utiliser le package Python yt-dlp.
pip install yt-dlp # Enregistrement mp3 yt-dlp -f &amp;#39;ba&amp;#39; -x --audio-format mp3 lien_vers_votre_playlist # Enregistrement mp4 # Best video quality yt-dlp lien_vers_votre_playlist -f &amp;#34;bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best&amp;#34; # Enregistrement mp4 # Worst video quality mais high quality audio yt-dlp lien_vers_votre_playlist -f &amp;#34;worstvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best&amp;#34; </description>
    </item>
    
    <item>
      <title>Afficher les 500 derni√®res bougies d&#39;une paire crypto de Binance</title>
      <link>https://leandeep.com/afficher-les-500-derni%C3%A8res-bougies-dune-paire-crypto-de-binance/</link>
      <pubDate>Thu, 05 Jan 2023 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/afficher-les-500-derni%C3%A8res-bougies-dune-paire-crypto-de-binance/</guid>
      <description>Petit tip du jour. Voici comment afficher, en moins 2 minutes, l&amp;rsquo;√©volution du cours d&amp;rsquo;une paire crypto pr√©sente sur Binance.
Installer les packages cctx et plotly puis cr√©er un fichier contenant le code suivant:
import ccxt from datetime import datetime import plotly.graph_objects as go def run(): binance = ccxt.binance() trading_pair = &amp;#34;BTC/USDT&amp;#34; candles = binance.fetch_ohlcv(trading_pair, &amp;#34;1d&amp;#34;) dates = [] open_data = [] high_data = [] low_data = [] close_data = [] for candle in candles: dates.</description>
    </item>
    
    <item>
      <title>Activer l&#39;IP forwarding sur une instance GCP apr√®s sa cr√©ation</title>
      <link>https://leandeep.com/activer-lip-forwarding-sur-une-instance-gcp-apr%C3%A8s-sa-cr%C3%A9ation/</link>
      <pubDate>Sun, 20 Nov 2022 09:22:00 +0000</pubDate>
      
      <guid>https://leandeep.com/activer-lip-forwarding-sur-une-instance-gcp-apr%C3%A8s-sa-cr%C3%A9ation/</guid>
      <description>Introduction Dans cet article tr√®s rapide nous allons voir comment activer l&amp;rsquo;IP forwarding sur une instance GCP d√©j√† cr√©√©e. L&amp;rsquo;id√©e est d&amp;rsquo;√©viter de l&amp;rsquo;effacer et de la recr√©er comme on peut le voir dans trop d&amp;rsquo;articles
Exporter la config de votre VM ./gcloud compute instances export instance-name \ --project VOTRE-PROJET \ --zone LA-ZONE-CONTENANT-VOTRE-VM \ --destination=instance-name_export Modification de la config export√©ee Editer le fichier instance-name_export et changer canIpForward: false par canIpForward: true</description>
    </item>
    
    <item>
      <title>Zipper un dossier avec mot de passe sur OSX</title>
      <link>https://leandeep.com/zipper-un-dossier-avec-mot-de-passe-sur-osx/</link>
      <pubDate>Sun, 13 Nov 2022 19:22:00 +0000</pubDate>
      
      <guid>https://leandeep.com/zipper-un-dossier-avec-mot-de-passe-sur-osx/</guid>
      <description>Le tip le plus rapide de l&amp;rsquo;ann√©e.
Pour cr√©er un Zip prot√©g√© par mot de passe sur OSX et sans outil suppl√©mentaire, il suffit d&amp;rsquo;ex√©cuter la commande suivante: zip -er archive.zip dossier
Et voil√† c&amp;rsquo;est tout. L&amp;rsquo;article de l&amp;rsquo;ann√©e ! üòú</description>
    </item>
    
    <item>
      <title>Proxies HTTP et SOCKS via gcloud</title>
      <link>https://leandeep.com/proxies-http-et-socks-via-gcloud/</link>
      <pubDate>Fri, 23 Sep 2022 09:22:00 +0000</pubDate>
      
      <guid>https://leandeep.com/proxies-http-et-socks-via-gcloud/</guid>
      <description>Introduction Dans cet article tr√®s rapide nous allons voir comment cr√©er une proxy SOCKS ou HTTP via une instance Google Cloud. On va juste utiliser le cli gcloud et un binaire open source.
Lancement du proxy Socks cd PATH_TO_GCLOUD_SI_PAS_DANS_$PATH export PORT_DU_PROXY= ./gcloud compute ssh NOM_DE_VOTRE_INSTANCE --project NOM_DE_VOTRE_PROJET --zone LA_ZONE_QUI_CONTIENT_VOTRE_INSTANCE --ssh-flag=&amp;#34;-D&amp;#34; --ssh-flag=&amp;#34;$PORT_DU_PROXY&amp;#34; --ssh-flag=&amp;#34;-N&amp;#34; V√©rification curl --socks5 127.0.0.1:$PORT_DU_PROXY https://ipinfo.io/ip
Besoin d&amp;rsquo;un proxy http ? Pas de souci, vous pouvez utiliser le projet Rust suivant https://github.</description>
    </item>
    
    <item>
      <title>Installer Docker et mitmproxy sur Ubuntu 22.04</title>
      <link>https://leandeep.com/installer-docker-et-mitmproxy-sur-ubuntu-22.04/</link>
      <pubDate>Mon, 01 Aug 2022 20:59:00 +0000</pubDate>
      
      <guid>https://leandeep.com/installer-docker-et-mitmproxy-sur-ubuntu-22.04/</guid>
      <description>Tips tr√®s tr√®s rapide montrant comment installer Docker et Mitmproxy sur Ubuntu 22.04.
Installation de Docker sur Ubuntu 22.04 sudo apt update sudo apt install -y ca-certificates curl gnupg lsb-release curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo &amp;#34;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&amp;#34; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null sudo apt-get update sudo apt install docker-ce docker-ce-cli containerd.io -y sudo usermod -aG docker $USER newgrp docker V√©rification de l&amp;rsquo;installation de Docker docker version D√©marrage du proxy mitm sur VM distante tmux docker run --rm -it -v ~/.</description>
    </item>
    
    <item>
      <title>Lister les nouveaux Exit Nodes sur Tor</title>
      <link>https://leandeep.com/lister-les-nouveaux-exit-nodes-sur-tor/</link>
      <pubDate>Fri, 27 May 2022 13:50:00 +0000</pubDate>
      
      <guid>https://leandeep.com/lister-les-nouveaux-exit-nodes-sur-tor/</guid>
      <description>Si comme moi vous vous demandez √† quelle fr√©quence des Exit Nodes sont ajout√©s ou retir√©s du r√©seau Tor, alors vous aurez la r√©ponse en ex√©cutant le script suivant. Parfois prendre 5 minutes √† √©crire un script peut nous donner les r√©ponses aux questions dont Google n&amp;rsquo;a pas la r√©ponse.
Python 3+ pip install requests import requests from datetime import datetime from time import sleep TOR_PROXIES_URI = &amp;#34;https://check.torproject.org/torbulkexitlist&amp;#34; previous_ips = set() while True: result = requests.</description>
    </item>
    
  </channel>
</rss>
