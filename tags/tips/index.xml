<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tips on Lean Deep Tech blog</title>
    <link>https://leandeep.com/tags/tips/</link>
    <description>Recent content in tips on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 27 May 2022 13:50:00 +0000</lastBuildDate><atom:link href="https://leandeep.com/tags/tips/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lister les nouveaux Exit Nodes sur Tor</title>
      <link>https://leandeep.com/lister-les-nouveaux-exit-nodes-sur-tor/</link>
      <pubDate>Fri, 27 May 2022 13:50:00 +0000</pubDate>
      
      <guid>https://leandeep.com/lister-les-nouveaux-exit-nodes-sur-tor/</guid>
      <description>Si comme moi vous vous demandez à quelle fréquence des Exit Nodes sont ajoutés ou retirés du réseau Tor, alors vous aurez la réponse en exécutant le script suivant. Parfois prendre 5 minutes à écrire un script peut nous donner les réponses aux questions dont Google n&amp;rsquo;a pas la réponse.
  Python 3+ pip install requests   import requests from datetime import datetime from time import sleep TOR_PROXIES_URI = &amp;#34;https://check.</description>
    </item>
    
    <item>
      <title>Lister les desktop environments installés sur Ubuntu</title>
      <link>https://leandeep.com/lister-les-desktop-environments-install%C3%A9s-sur-ubuntu/</link>
      <pubDate>Thu, 26 May 2022 21:35:00 +0000</pubDate>
      
      <guid>https://leandeep.com/lister-les-desktop-environments-install%C3%A9s-sur-ubuntu/</guid>
      <description>Second tiny tip du jour. Voici comment lister tous les desktop environments installés sur Ubuntu.
ls -l /usr/share/xsessions/ Output:
-rw-r--r-- 1 root root 155 janv. 9 2021 cinnamon.desktop -rw-r--r-- 1 root root 268 janv. 9 2021 cinnamon2d.desktop -rw-r--r-- 1 root root 8192 mars 23 2020 mate.desktop -rw-r--r-- 1 root root 303 mars 26 2020 ubuntu.desktop </description>
    </item>
    
    <item>
      <title>Convertir un fichier pipfile.lock en requirements.txt</title>
      <link>https://leandeep.com/convertir-un-fichier-pipfile.lock-en-requirements.txt/</link>
      <pubDate>Thu, 26 May 2022 21:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/convertir-un-fichier-pipfile.lock-en-requirements.txt/</guid>
      <description>Petit tip du jour pour convertir un fichier Pipfile en requirements.txt
En pré-requis, il faut avoir jq
 brew install jq
 Ensuite, il suffit d&amp;rsquo;exécuter la commande suivante:
jq -r &amp;#39;.default | to_entries[] | .key + .value.version&amp;#39; \ Pipfile.lock &amp;gt; requirements.txt </description>
    </item>
    
    <item>
      <title>Corriger l&#39;erreur &#34;is loading libcrypto in an unsafe way&#34; zsh crash sur OSX</title>
      <link>https://leandeep.com/corriger-lerreur-is-loading-libcrypto-in-an-unsafe-way-zsh-crash-sur-osx/</link>
      <pubDate>Wed, 18 May 2022 22:59:00 +0000</pubDate>
      
      <guid>https://leandeep.com/corriger-lerreur-is-loading-libcrypto-in-an-unsafe-way-zsh-crash-sur-osx/</guid>
      <description>Voici la procédure pour corriger l&amp;rsquo;erreur qui fait crasher le terminal zsh avec le message d&amp;rsquo;erreur suivant: is loading libcrypto in an unsafe way lors du démarrage de Python (3.9.12 dans mon cas) sur OSX Monterey
J&amp;rsquo;ai parfois eu cette erreur après avoir bidouillé: SystemError: ffi_prep_closure(): bad user_data (it seems that the version of the libffi library seen at runtime is different from the &#39;ffi.h&#39; file seen at compile-time). Bref c&amp;rsquo;est une erreur Openssl.</description>
    </item>
    
    <item>
      <title>Enregistrer l&#39;écran de son Mac avec le son built-in</title>
      <link>https://leandeep.com/enregistrer-l%C3%A9cran-de-son-mac-avec-le-son-built-in/</link>
      <pubDate>Mon, 02 May 2022 22:45:00 +0000</pubDate>
      
      <guid>https://leandeep.com/enregistrer-l%C3%A9cran-de-son-mac-avec-le-son-built-in/</guid>
      <description>Dans cet article très court, nous allons voir comment faire un screen recording avec le son built-in à partir de Quicktime sur Mac. Pas besoin de soft payant; juste d&amp;rsquo;un driver supplémentaire open source
 Installation du driver Installer le driver virtuel permettant d&amp;rsquo;enregistrer le son built-in.
brew install blackhole-16ch  Création de nouvelles interfaces audio Ouvrir l&amp;rsquo;application officielle Apple Audio MIDI setup.
Nous allons créer 2 interfaces audio. Une en input et une en output.</description>
    </item>
    
    <item>
      <title>Corriger l&#39;erreur ADB no permissions sur Arch</title>
      <link>https://leandeep.com/corriger-lerreur-adb-no-permissions-sur-arch/</link>
      <pubDate>Wed, 02 Mar 2022 22:59:00 +0000</pubDate>
      
      <guid>https://leandeep.com/corriger-lerreur-adb-no-permissions-sur-arch/</guid>
      <description>Voici la procédure pour installer ADB sur Arch, fixer le problème de permissions et uploader des fichiers en cli. Je me sers de ces commandes pour copier des vidéos très lourdes filmées en 8K sur un Meta Quest 2 via USB.
 Installation sudo pacman -S android-tools  Permissions # Si adb tourne déjà # adb kill-server # Puis démarrage avec sudo sudo adb start-server  Upload de fichiers # Lister les directories du device # adb shell ls -R / # adb shell ls / adb push .</description>
    </item>
    
    <item>
      <title>Installer Docker sur Arch Linux</title>
      <link>https://leandeep.com/installer-docker-sur-arch-linux/</link>
      <pubDate>Sun, 13 Feb 2022 20:49:00 +0200</pubDate>
      
      <guid>https://leandeep.com/installer-docker-sur-arch-linux/</guid>
      <description>Petit tip de 10 secondes décrivant comment installer Docker sur Arch Linux.
Installation sudo pacman -S docker	sudo groupadd docker sudo usermod -aG docker $USER sudo chmod 666 /var/run/docker.sock sudo systemctl enable docker.service sudo systemctl start docker.service  Vérification docker run hello-world </description>
    </item>
    
    <item>
      <title>Aide mémoire types Rust</title>
      <link>https://leandeep.com/aide-m%C3%A9moire-types-rust/</link>
      <pubDate>Fri, 28 Jan 2022 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/aide-m%C3%A9moire-types-rust/</guid>
      <description>Literals Le type d&amp;rsquo;une variable peut être défini en ajoutant un suffixe derrière la valeur de la variable. Par exemple:
let mon_test1: i32 = 12; Equivaut à let mon_test2 = 12i32; Equivaut à let mon_test3 = 12_i32; Retourner la taille d&amp;rsquo;une variable:
println!(&amp;#34;Taille de `mon_test1` in bytes: {}&amp;#34;, std::mem::size_of_val(&amp;amp;mon_test1)); Taille de `mon_test1` in bytes: 4 // i32 -&amp;gt; 4 x 8  Casting  Il n&amp;rsquo;y a pas de coercion, c&amp;rsquo;est-à-dire de la conversion implicite, entre les types primitifs en Rust.</description>
    </item>
    
    <item>
      <title>Aide mémoire pour printer en Rust</title>
      <link>https://leandeep.com/aide-m%C3%A9moire-pour-printer-en-rust/</link>
      <pubDate>Sun, 16 Jan 2022 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/aide-m%C3%A9moire-pour-printer-en-rust/</guid>
      <description>Le print simple/ courant
println!(&amp;#34;{}, l&amp;#39;origine&amp;#34;, 42);  Print avec des arguments positionnels
println!(&amp;#34;Hi {0}, I am {1}. Hi {1}, I am {0}&amp;#34;, &amp;#34;John&amp;#34;, &amp;#34;Peter&amp;#34;);  Print avec des arguments nommés
println!(&amp;#34;{argument1} {argument2} {argument3}&amp;#34;, argument2=&amp;#34;fifi&amp;#34;, argument1=&amp;#34;riri&amp;#34;, argument3=&amp;#34;loulou&amp;#34; );  Printer en alignant la variable à afficher à droite
println!(&amp;#34;{ma_variable:&amp;gt;width$}&amp;#34;, ma_variable=&amp;#34;toto&amp;#34;, width=10);  Printer en alignant à droite et en préfixant avec des zéros
println!(&amp;#34;{nombre:0&amp;gt;width$}&amp;#34;, nombre=100, width=6);  Printer avec une conversion automatique en binaire</description>
    </item>
    
    <item>
      <title>Aide mémoire primitives Rust</title>
      <link>https://leandeep.com/aide-m%C3%A9moire-primitives-rust/</link>
      <pubDate>Tue, 11 Jan 2022 07:00:00 +0200</pubDate>
      
      <guid>https://leandeep.com/aide-m%C3%A9moire-primitives-rust/</guid>
      <description>Annoter le type des variables
let is_rust_cool: bool = true; // let mon_float: f64 = 5.0; // Annotation simple // let mon_integer = 5i32; // Annotation via suffixe // Ou inférence de type: let mon_autre_float = 5.0; // f64 let mon_autre_integer = 5; // i32  Le type de variable ne peut pas être changé
  Tableau de taille fixe et type connu
let petit_tableau: [i8; 5] = [1, 2, 3, 4, 5];  Tableau de taille fixe, type connu et initialisé à 0</description>
    </item>
    
  </channel>
</rss>
