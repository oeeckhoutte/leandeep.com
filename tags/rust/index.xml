<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust on Lean Deep Tech blog</title>
    <link>https://leandeep.com/tags/rust/</link>
    <description>Recent content in Rust on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 31 Dec 2021 06:34:00 +0000</lastBuildDate><atom:link href="https://leandeep.com/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Installer un REPL Rust</title>
      <link>https://leandeep.com/installer-un-repl-rust/</link>
      <pubDate>Fri, 31 Dec 2021 06:34:00 +0000</pubDate>
      
      <guid>https://leandeep.com/installer-un-repl-rust/</guid>
      <description>Introduction Dans cet article, nous allons voir comment installer le REPL evcxr pour Rust d√©velopp√© par Google. Ce genre d&amp;rsquo;outil est tr√®s utile lorsque vous apprenez un langage (ou m√™me quand vous √™tes exp√©riment√© et que vous voulez v√©rifier quelque chose). Avec evcxr, il n&amp;rsquo;est pas n√©cessaire de recompiler son programme Rust √† chaque nouvelle commande ex√©cut√©e. Ce REPL le fait tout seul; un gros gain de temps.
 Installation rustup component add rust-src cargo install evcxr_repl  D√©marrage  Lien vers la documentation</description>
    </item>
    
    <item>
      <title>Tips en vrac sur Rust</title>
      <link>https://leandeep.com/tips-en-vrac-sur-rust/</link>
      <pubDate>Fri, 31 Dec 2021 06:34:00 +0000</pubDate>
      
      <guid>https://leandeep.com/tips-en-vrac-sur-rust/</guid>
      <description>Voir les &amp;ldquo;choses&amp;rdquo; charg√©es par d√©faut lors du d√©marrage d&amp;rsquo;un programme Rust
 &amp;ldquo;The prelude is the list of things that Rust automatically imports into every Rust program.&amp;rdquo; Source
 https://doc.rust-lang.org/std/prelude/v1/index.html
 Some()
Some est une variante de l&amp;rsquo;enum Option.
enum Option&amp;lt;T&amp;gt; { None, Some(T), } Si on veut parler d&amp;rsquo;une variable qui existe, on utilise Some(value). (Par contre, si on veut parler d&amp;rsquo;une variable qui pourrait ne pas exister, on utilise plut√¥t Option&amp;lt;IciAnyType&amp;gt;)</description>
    </item>
    
    <item>
      <title>Installer Rust sur Debian</title>
      <link>https://leandeep.com/installer-rust-sur-debian/</link>
      <pubDate>Mon, 24 May 2021 15:20:00 +0000</pubDate>
      
      <guid>https://leandeep.com/installer-rust-sur-debian/</guid>
      <description>Provisioning d&amp;rsquo;une instance Debian docker run -it -v $PWD:/home debian:latest bash  Installation de Rust apt update apt install curl vim git -y curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh apt install gcc gcc-multilib source $HOME/.cargo/env find /usr -iname &amp;quot;crti.o&amp;quot; -print export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH # dans ~/.zshrc find /usr -iname &amp;quot;Scrt1.o&amp;quot; -print # /usr/lib/x86_64-linux-gnu/Scrt1.o -&amp;gt; No export necessary else add the dir containing Scrt1.o apt-get install libclang-dev find /usr -iname &amp;quot;libclang.</description>
    </item>
    
    <item>
      <title>Premier programme en Rust</title>
      <link>https://leandeep.com/premier-programme-en-rust/</link>
      <pubDate>Thu, 13 May 2021 18:20:00 +0000</pubDate>
      
      <guid>https://leandeep.com/premier-programme-en-rust/</guid>
      <description>J&amp;rsquo;ai voulu cr√©er un premier programme en Rust; sans avoir jamais suivi de tutoriel ou de formation. Suite √† cette premi√®re exp√©rience, je pense que c&amp;rsquo;est tr√®s compliqu√© de coder quelque chose de propre et de comprendre ce que l&amp;rsquo;on fait sans lire un livre sur le sujet.
J&amp;rsquo;ai donc craqu√© et me suis pr√©vu un peu de lecture pour ce mois ci üòú&amp;hellip;
 Premier hello world Cr√©er un fichier main.</description>
    </item>
    
    <item>
      <title>Rust to Webassembly</title>
      <link>https://leandeep.com/rust-to-webassembly/</link>
      <pubDate>Sun, 22 Dec 2019 18:28:03 +0000</pubDate>
      
      <guid>https://leandeep.com/rust-to-webassembly/</guid>
      <description>Introduction L&amp;rsquo;objectif de cet article est de voir comment compiler un tout petit programme en Rust et de l&amp;rsquo;appeler soit dans un navigateur, soit dans un programme NodeJS ou soit dans un programme Python.
 Installation Installer rustup
 Rustup is an installer for the systems programming language Rust
 curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh source $HOME/.cargo/env  Installer wasm-pack
curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh  Cr√©ation d&amp;rsquo;une librairie Rust cargo new --lib days-count Remplacer le contenu du fichier days-count/src/lib.</description>
    </item>
    
  </channel>
</rss>
