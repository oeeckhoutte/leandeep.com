<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Bienvenue sur le site de Lean Deep</title>
    <link>https://leandeep.com/tags/git/</link>
    <description>Recent content in Git on Bienvenue sur le site de Lean Deep</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 06 Sep 2019 11:39:00 +0000</lastBuildDate><atom:link href="https://leandeep.com/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Get rid of .pem file to SSH on your AWS EC2 instance</title>
      <link>https://leandeep.com/get-rid-of-.pem-file-to-ssh-on-your-aws-ec2-instance/</link>
      <pubDate>Fri, 06 Sep 2019 11:39:00 +0000</pubDate>
      
      <guid>https://leandeep.com/get-rid-of-.pem-file-to-ssh-on-your-aws-ec2-instance/</guid>
      <description>Let&amp;rsquo;s say you want to setup a Gitlab server on AWS and you need to do a git clone using SSH protocol. You will be annoyed by the .pem file. To get rid of it (or more simply hide it) you can follow this procedure:
The pem file contains a private key. Simply extract it and add it to your system.
 Copy the private key to the .ssh folder</description>
    </item>
    
    <item>
      <title>Config, Commandes et tips utiles Git</title>
      <link>https://leandeep.com/config-commandes-et-tips-utiles-git/</link>
      <pubDate>Sat, 19 Sep 2015 18:25:00 +0000</pubDate>
      
      <guid>https://leandeep.com/config-commandes-et-tips-utiles-git/</guid>
      <description>Indispensable à savoir Index
L’index est une zone qui permet de préparer un commit.
 HEAD
HEAD est la référence sur le commit sur lequel on se trouve actuellement. On le change avec git checkout.
 Rebase vs Merge Préférer le rebase pour garder un historique propre
 Rebase Eviter git pull pour éviter que Git ne considère notre branche locale et remote comme 2 branches différentes alors que ce sont les mêmes.</description>
    </item>
    
  </channel>
</rss>
