<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python &amp; Basic Machine Learning Tips on Lean Deep Tech blog</title>
    <link>https://leandeep.com/tips/</link>
    <description>Recent content in Python &amp; Basic Machine Learning Tips on Lean Deep Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 15 Jan 2020 22:20:04 -0700</lastBuildDate><atom:link href="https://leandeep.com/tips/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Utiliser zip pour itérer sur deux listes</title>
      <link>https://leandeep.com/tips/utiliser-zip-pour-iterer-sur-deux-listes-copy/</link>
      <pubDate>Tue, 14 Jan 2020 21:20:04 -0700</pubDate>
      
      <guid>https://leandeep.com/tips/utiliser-zip-pour-iterer-sur-deux-listes-copy/</guid>
      <description>La bonne approche pour itérer sur deux listes est de créer deux variables, par exemple liste_un et liste_deux et d&amp;rsquo;utiliser zip en passant en paramètre les 2 variables.
Anti-pattern (Pas bien!) nombres = [1, 2, 3] prenoms = [&amp;#34;titi&amp;#34;, &amp;#34;tata&amp;#34;, &amp;#34;toto&amp;#34;] for idx in range(len(nombres)): print(nombres[idx], prenoms[idx]) Bonne pratique (Bien!) Dans les 2 cas, le résultat est identique à savoir:
1 titi 2 tata 3 toto Mais voici une manière plus Pythonique d&amp;rsquo;itérer sur ces 2 listes.</description>
    </item>
    
  </channel>
</rss>
